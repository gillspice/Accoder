ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	MIDI_IDENTITY_REPLY
  19              		.section	.rodata
  20              		.align	2
  21              		.type	MIDI_IDENTITY_REPLY, %object
  22              		.size	MIDI_IDENTITY_REPLY, 14
  23              	MIDI_IDENTITY_REPLY:
  24 0000 F0       		.byte	-16
  25 0001 7E       		.byte	126
  26 0002 7F       		.byte	127
  27 0003 06       		.byte	6
  28 0004 02       		.byte	2
  29 0005 7D       		.byte	125
  30 0006 B4       		.byte	-76
  31 0007 04       		.byte	4
  32 0008 32       		.byte	50
  33 0009 D2       		.byte	-46
  34 000a 01       		.byte	1
  35 000b 00       		.byte	0
  36 000c 00       		.byte	0
  37 000d 00       		.byte	0
  38              		.global	usbActivityCounter
  39 000e 0000     		.bss
  40              		.type	usbActivityCounter, %object
  41              		.size	usbActivityCounter, 1
  42              	usbActivityCounter:
  43 0000 00       		.space	1
  44              		.global	csButtStates
  45              		.type	csButtStates, %object
  46              		.size	csButtStates, 1
  47              	csButtStates:
  48 0001 00       		.space	1
  49              		.global	csButtStatesOld
  50              		.type	csButtStatesOld, %object
  51              		.size	csButtStatesOld, 1
  52              	csButtStatesOld:
  53 0002 00       		.space	1
  54              		.global	csButtChange
  55              		.type	csButtChange, %object
  56              		.size	csButtChange, 1
  57              	csButtChange:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 2


  58 0003 00       		.space	1
  59              		.global	inqFlagsOld
  60              		.type	inqFlagsOld, %object
  61              		.size	inqFlagsOld, 1
  62              	inqFlagsOld:
  63 0004 00       		.space	1
  64              		.section	.text.SleepIsr,"ax",%progbits
  65              		.align	2
  66              		.global	SleepIsr
  67              		.thumb
  68              		.thumb_func
  69              		.type	SleepIsr, %function
  70              	SleepIsr:
  71              	.LFB63:
  72              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 1.0
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This example project demonstrates the MIDI interface device operation.  The 
   8:main.c        **** *  project enumerates as a USB Audio Device with the MIDI feature and does not 
   9:main.c        **** *  require additional drivers. The main goal of the USB MIDI interface is to 
  10:main.c        **** *  transfer and convert MIDI data between external MIDI devices that use the 
  11:main.c        **** *  UART interface, and a PC through the USB bus.			
  12:main.c        **** *   
  13:main.c        **** * Related Document:
  14:main.c        **** *  Universal Serial Bus Specification Revision 2.0 
  15:main.c        **** *  Universal Serial Bus Device Class Definition for MIDI Devices Release 1.0
  16:main.c        **** *  MIDI 1.0 Detailed Specification Document Version 4.2
  17:main.c        **** *
  18:main.c        **** ********************************************************************************
  19:main.c        **** * Copyright 2012-2015, Cypress Semiconductor Corporation. All rights reserved.
  20:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
  21:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  22:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  23:main.c        **** * accompanying the software package from which you obtained this software.
  24:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  25:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  26:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  27:main.c        **** *******************************************************************************/
  28:main.c        **** 
  29:main.c        **** #include <project.h>
  30:main.c        **** 
  31:main.c        **** #define BUTT1	                (0x01u)
  32:main.c        **** #define BUTT2	                (0x02u)
  33:main.c        **** 
  34:main.c        **** #define DEVICE                  (0u)
  35:main.c        **** #define MIDI_MSG_SIZE           (4u)
  36:main.c        **** 
  37:main.c        **** /*MIDI Message Fields */
  38:main.c        **** #define MIDI_MSG_TYPE           (0u)
  39:main.c        **** #define MIDI_NOTE_NUMBER        (1u)
  40:main.c        **** #define MIDI_NOTE_VELOCITY      (2u)
  41:main.c        **** 
  42:main.c        **** /* MIDI Notes*/
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 3


  43:main.c        **** #define NOTE_72                 (72u)
  44:main.c        **** #define NOTE_76                 (76u)
  45:main.c        **** 
  46:main.c        **** /* MIDI Notes Velocity*/
  47:main.c        **** #define VOLUME_OFF              (0u)
  48:main.c        **** #define VOLUME_ON               (100u)
  49:main.c        **** 
  50:main.c        **** #define USB_SUSPEND_TIMEOUT     (2u)
  51:main.c        **** 
  52:main.c        **** /* Identity Reply message */
  53:main.c        **** const uint8 CYCODE MIDI_IDENTITY_REPLY[] = {
  54:main.c        ****     0xF0u,      /* SysEx */
  55:main.c        ****     0x7Eu,      /* Non-real time */
  56:main.c        ****     0x7Fu,      /* ID of target device (7F - "All Call") */
  57:main.c        ****     0x06u,      /* Sub-ID#1 - General Information */
  58:main.c        ****     0x02u,      /* Sub-ID#2 - Identity Reply */
  59:main.c        ****     0x7Du,      /* Manufacturer's ID: 7D - Educational Use */
  60:main.c        ****     0xB4u, 0x04u,               /* Family code */
  61:main.c        ****     0x32u, 0xD2u,               /* Model number */
  62:main.c        ****     0x01u, 0x00u, 0x00u, 0x00u, /* Version number */
  63:main.c        ****     /*0xF7         End of SysEx automatically appended */
  64:main.c        **** };
  65:main.c        **** 
  66:main.c        **** /* Need for Identity Reply message */
  67:main.c        **** extern volatile uint8 USB_MIDI1_InqFlags;
  68:main.c        **** extern volatile uint8 USB_MIDI2_InqFlags;
  69:main.c        **** 
  70:main.c        **** volatile uint8 usbActivityCounter = 0u;
  71:main.c        **** 
  72:main.c        **** uint8 csButtStates = 0u;
  73:main.c        **** uint8 csButtStatesOld = 0u;
  74:main.c        **** uint8 csButtChange = 0u;
  75:main.c        **** uint8 inqFlagsOld = 0u;
  76:main.c        **** 
  77:main.c        **** 
  78:main.c        **** /*******************************************************************************
  79:main.c        **** * Function Name: SleepIsr
  80:main.c        **** ********************************************************************************
  81:main.c        **** * Summary:
  82:main.c        **** *  The sleep interrupt-service-routine used to determine a sleep condition.
  83:main.c        **** *  The device goes into the Suspend state when there is a constant Idle 
  84:main.c        **** *  state on its upstream-facing bus-lines for more than 3.0 ms. 
  85:main.c        **** *  The device must be suspended drawing only suspend current from the 
  86:main.c        **** *  bus after no more than 10 ms of the bus inactivity on all its ports.
  87:main.c        **** *  This ISR is run each 4 ms, so after a second turn without the USB activity,  
  88:main.c        **** *  the device should be suspended.
  89:main.c        **** *
  90:main.c        **** *******************************************************************************/
  91:main.c        **** CY_ISR(SleepIsr)
  92:main.c        **** {
  73              		.loc 1 92 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77 0000 80B5     		push	{r7, lr}
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 7, -8
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 4


  80              		.cfi_offset 14, -4
  81 0002 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  93:main.c        ****     /* Check USB activity */
  94:main.c        ****     if(0u != USB_CheckActivity()) 
  83              		.loc 1 94 0
  84 0004 FFF7FEFF 		bl	USB_CheckActivity
  85 0008 0346     		mov	r3, r0
  86 000a 002B     		cmp	r3, #0
  87 000c 03D0     		beq	.L2
  95:main.c        ****     {
  96:main.c        ****         usbActivityCounter = 0u;
  88              		.loc 1 96 0
  89 000e 074B     		ldr	r3, .L4
  90 0010 0022     		movs	r2, #0
  91 0012 1A70     		strb	r2, [r3]
  92 0014 06E0     		b	.L3
  93              	.L2:
  97:main.c        ****     } 
  98:main.c        ****     else 
  99:main.c        ****     {
 100:main.c        ****         usbActivityCounter++;
  94              		.loc 1 100 0
  95 0016 054B     		ldr	r3, .L4
  96 0018 1B78     		ldrb	r3, [r3]
  97 001a DBB2     		uxtb	r3, r3
  98 001c 0133     		adds	r3, r3, #1
  99 001e DAB2     		uxtb	r2, r3
 100 0020 024B     		ldr	r3, .L4
 101 0022 1A70     		strb	r2, [r3]
 102              	.L3:
 101:main.c        ****     }
 102:main.c        ****     /* Clear Pending Interrupt */
 103:main.c        ****     SleepTimer_GetStatus();
 103              		.loc 1 103 0
 104 0024 FFF7FEFF 		bl	SleepTimer_GetStatus
 104:main.c        **** }
 105              		.loc 1 104 0
 106 0028 80BD     		pop	{r7, pc}
 107              	.L5:
 108 002a 00BF     		.align	2
 109              	.L4:
 110 002c 00000000 		.word	usbActivityCounter
 111              		.cfi_endproc
 112              	.LFE63:
 113              		.size	SleepIsr, .-SleepIsr
 114              		.section	.text.main,"ax",%progbits
 115              		.align	2
 116              		.global	main
 117              		.thumb
 118              		.thumb_func
 119              		.type	main, %function
 120              	main:
 121              	.LFB64:
 105:main.c        **** 
 106:main.c        **** 
 107:main.c        **** /*******************************************************************************
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 5


 108:main.c        **** * Function Name: main
 109:main.c        **** ********************************************************************************
 110:main.c        **** * Summary:
 111:main.c        **** *       1. Starts the USBFS device and waits for enumaration.
 112:main.c        **** *
 113:main.c        **** *******************************************************************************/
 114:main.c        **** int main()
 115:main.c        **** {
 122              		.loc 1 115 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 8
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 80B5     		push	{r7, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 82B0     		sub	sp, sp, #8
 131              		.cfi_def_cfa_offset 16
 132 0004 00AF     		add	r7, sp, #0
 133              		.cfi_def_cfa_register 7
 116:main.c        ****     uint8 midiMsg[MIDI_MSG_SIZE];    
 117:main.c        **** 
 118:main.c        ****     /* Enable Global Interrupts */
 119:main.c        ****     CyGlobalIntEnable;
 134              		.loc 1 119 0
 135              	@ 119 "main.c" 1
 136 0006 62B6     		CPSIE   i
 137              	@ 0 "" 2
 120:main.c        **** 
 121:main.c        ****     /* Start USBFS device 0 with VDDD operation */
 122:main.c        ****     USB_Start(DEVICE, USB_DWR_VDDD_OPERATION); 
 138              		.loc 1 122 0
 139              		.thumb
 140 0008 0020     		movs	r0, #0
 141 000a 0221     		movs	r1, #2
 142 000c FFF7FEFF 		bl	USB_Start
 123:main.c        ****     
 124:main.c        ****     /*Turn on some tabs*/
 125:main.c        ****     Tabs_1_Write(0xff);
 143              		.loc 1 125 0
 144 0010 FF20     		movs	r0, #255
 145 0012 FFF7FEFF 		bl	Tabs_1_Write
 126:main.c        ****     Tabs_2_Write(0xff);
 146              		.loc 1 126 0
 147 0016 FF20     		movs	r0, #255
 148 0018 FFF7FEFF 		bl	Tabs_2_Write
 127:main.c        ****     Tabs_3_Write(0xff);
 149              		.loc 1 127 0
 150 001c FF20     		movs	r0, #255
 151 001e FFF7FEFF 		bl	Tabs_3_Write
 128:main.c        ****     //Tabs_4_Write(0xff);
 129:main.c        ****     
 130:main.c        ****     Chords_Bass_Notes_Write(0xff);
 152              		.loc 1 130 0
 153 0022 FF20     		movs	r0, #255
 154 0024 FFF7FEFF 		bl	Chords_Bass_Notes_Write
 131:main.c        ****     Chords_Notes_Write(0xff);
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 6


 155              		.loc 1 131 0
 156 0028 FF20     		movs	r0, #255
 157 002a FFF7FEFF 		bl	Chords_Notes_Write
 132:main.c        ****     Bass_Notes_Write(0xff);
 158              		.loc 1 132 0
 159 002e FF20     		movs	r0, #255
 160 0030 FFF7FEFF 		bl	Bass_Notes_Write
 133:main.c        ****     Chorus_Speed_Write(0xff);
 161              		.loc 1 133 0
 162 0034 FF20     		movs	r0, #255
 163 0036 FFF7FEFF 		bl	Chorus_Speed_Write
 164              	.L24:
 134:main.c        ****     //Control_Reg_10_Write(0xff);
 135:main.c        ****     //Control_Reg_11_Write(0xff);
 136:main.c        ****     
 137:main.c        ****     
 138:main.c        ****     
 139:main.c        ****     //Keys_Notes_5_Write(0x40);
 140:main.c        **** 
 141:main.c        ****     while(1u)
 142:main.c        ****     {
 143:main.c        ****         /* Host can send double SET_INTERFACE request */
 144:main.c        ****         if(0u != USB_IsConfigurationChanged())
 165              		.loc 1 144 0
 166 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 167 003e 0346     		mov	r3, r0
 168 0040 002B     		cmp	r3, #0
 169 0042 11D0     		beq	.L7
 145:main.c        ****         {
 146:main.c        ****             /* Initialize IN endpoints when device configured */
 147:main.c        ****             if(0u != USB_GetConfiguration())   
 170              		.loc 1 147 0
 171 0044 FFF7FEFF 		bl	USB_GetConfiguration
 172 0048 0346     		mov	r3, r0
 173 004a 002B     		cmp	r3, #0
 174 004c 0AD0     		beq	.L8
 148:main.c        ****             {
 149:main.c        ****                 /* Power ON CY8CKIT-044 board */
 150:main.c        ****                 MIDI_PWR_Write(0u); 
 175              		.loc 1 150 0
 176 004e 0020     		movs	r0, #0
 177 0050 FFF7FEFF 		bl	MIDI_PWR_Write
 151:main.c        ****                 
 152:main.c        ****                 /* Start ISR to determine sleep condition */		
 153:main.c        ****                 Sleep_isr_StartEx(SleepIsr);
 178              		.loc 1 153 0
 179 0054 7048     		ldr	r0, .L25
 180 0056 FFF7FEFF 		bl	Sleep_isr_StartEx
 154:main.c        ****                 
 155:main.c        ****                 /* Start SleepTimer's operation */
 156:main.c        ****                 SleepTimer_Start();
 181              		.loc 1 156 0
 182 005a FFF7FEFF 		bl	SleepTimer_Start
 157:main.c        ****                 
 158:main.c        ****             	/* Enable output endpoint */
 159:main.c        ****                 USB_MIDI_Init();
 183              		.loc 1 159 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 7


 184 005e FFF7FEFF 		bl	USB_MIDI_Init
 185 0062 01E0     		b	.L7
 186              	.L8:
 160:main.c        ****             }
 161:main.c        ****             else
 162:main.c        ****             {
 163:main.c        ****                 SleepTimer_Stop();
 187              		.loc 1 163 0
 188 0064 FFF7FEFF 		bl	SleepTimer_Stop
 189              	.L7:
 164:main.c        ****             }    
 165:main.c        ****         }        
 166:main.c        ****         
 167:main.c        ****         /* Service USB MIDI when device is configured */
 168:main.c        ****         if(0u != USB_GetConfiguration())    
 190              		.loc 1 168 0
 191 0068 FFF7FEFF 		bl	USB_GetConfiguration
 192 006c 0346     		mov	r3, r0
 193 006e 002B     		cmp	r3, #0
 194 0070 00F0D180 		beq	.L9
 169:main.c        ****         {
 170:main.c        ****             /* Call this API from UART RX ISR for Auto DMA mode */
 171:main.c        ****             #if(!USB_EP_MANAGEMENT_DMA_AUTO) 
 172:main.c        ****                 USB_MIDI_IN_Service();
 195              		.loc 1 172 0
 196 0074 FFF7FEFF 		bl	USB_MIDI_IN_Service
 173:main.c        ****             #endif
 174:main.c        ****             /* In Manual EP Memory Management mode OUT_EP_Service() 
 175:main.c        ****             *  may have to be called from main foreground or from OUT EP ISR
 176:main.c        ****             */
 177:main.c        ****             #if(!USB_EP_MANAGEMENT_DMA_AUTO) 
 178:main.c        ****                 USB_MIDI_OUT_Service();
 197              		.loc 1 178 0
 198 0078 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 179:main.c        ****             #endif
 180:main.c        **** 
 181:main.c        ****             /* Sending Identity Reply Universal System Exclusive message 
 182:main.c        ****              * back to computer */
 183:main.c        ****             if(0u != (USB_MIDI1_InqFlags & USB_INQ_IDENTITY_REQ_FLAG))
 199              		.loc 1 183 0
 200 007c 674B     		ldr	r3, .L25+4
 201 007e 1B78     		ldrb	r3, [r3]
 202 0080 DBB2     		uxtb	r3, r3
 203 0082 03F00203 		and	r3, r3, #2
 204 0086 002B     		cmp	r3, #0
 205 0088 0CD0     		beq	.L10
 184:main.c        ****             {
 185:main.c        ****                 USB_PutUsbMidiIn(sizeof(MIDI_IDENTITY_REPLY), \
 206              		.loc 1 185 0
 207 008a 0E20     		movs	r0, #14
 208 008c 6449     		ldr	r1, .L25+8
 209 008e 0022     		movs	r2, #0
 210 0090 FFF7FEFF 		bl	USB_PutUsbMidiIn
 186:main.c        ****                             (uint8 *)MIDI_IDENTITY_REPLY, USB_MIDI_CABLE_00);
 187:main.c        ****                 USB_MIDI1_InqFlags &= ~USB_INQ_IDENTITY_REQ_FLAG;
 211              		.loc 1 187 0
 212 0094 614B     		ldr	r3, .L25+4
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 8


 213 0096 1B78     		ldrb	r3, [r3]
 214 0098 DBB2     		uxtb	r3, r3
 215 009a 23F00203 		bic	r3, r3, #2
 216 009e DAB2     		uxtb	r2, r3
 217 00a0 5E4B     		ldr	r3, .L25+4
 218 00a2 1A70     		strb	r2, [r3]
 219              	.L10:
 188:main.c        ****             }
 189:main.c        ****             #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 190:main.c        ****                 if(0u != (USB_MIDI2_InqFlags & USB_INQ_IDENTITY_REQ_FLAG))
 220              		.loc 1 190 0
 221 00a4 5F4B     		ldr	r3, .L25+12
 222 00a6 1B78     		ldrb	r3, [r3]
 223 00a8 DBB2     		uxtb	r3, r3
 224 00aa 03F00203 		and	r3, r3, #2
 225 00ae 002B     		cmp	r3, #0
 226 00b0 0CD0     		beq	.L11
 191:main.c        ****                 {
 192:main.c        ****                     USB_PutUsbMidiIn(sizeof(MIDI_IDENTITY_REPLY), \
 227              		.loc 1 192 0
 228 00b2 0E20     		movs	r0, #14
 229 00b4 5A49     		ldr	r1, .L25+8
 230 00b6 1022     		movs	r2, #16
 231 00b8 FFF7FEFF 		bl	USB_PutUsbMidiIn
 193:main.c        ****                             (uint8 *)MIDI_IDENTITY_REPLY, USB_MIDI_CABLE_01);
 194:main.c        ****                     USB_MIDI2_InqFlags &= ~USB_INQ_IDENTITY_REQ_FLAG;
 232              		.loc 1 194 0
 233 00bc 594B     		ldr	r3, .L25+12
 234 00be 1B78     		ldrb	r3, [r3]
 235 00c0 DBB2     		uxtb	r3, r3
 236 00c2 23F00203 		bic	r3, r3, #2
 237 00c6 DAB2     		uxtb	r2, r3
 238 00c8 564B     		ldr	r3, .L25+12
 239 00ca 1A70     		strb	r2, [r3]
 240              	.L11:
 195:main.c        ****                 }
 196:main.c        ****             #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 197:main.c        ****             
 198:main.c        ****             /* Service Keys */
 199:main.c        ****     		if (0u == SW1_Read()) 
 241              		.loc 1 199 0
 242 00cc FFF7FEFF 		bl	SW1_Read
 243 00d0 0346     		mov	r3, r0
 244 00d2 002B     		cmp	r3, #0
 245 00d4 07D1     		bne	.L12
 200:main.c        ****             {
 201:main.c        ****                 csButtStates |= BUTT1;
 246              		.loc 1 201 0
 247 00d6 544B     		ldr	r3, .L25+16
 248 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 249 00da 43F00103 		orr	r3, r3, #1
 250 00de DAB2     		uxtb	r2, r3
 251 00e0 514B     		ldr	r3, .L25+16
 252 00e2 1A70     		strb	r2, [r3]
 253 00e4 06E0     		b	.L13
 254              	.L12:
 202:main.c        ****             }
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 9


 203:main.c        ****             else
 204:main.c        ****             {
 205:main.c        ****                 csButtStates &= ~BUTT1;
 255              		.loc 1 205 0
 256 00e6 504B     		ldr	r3, .L25+16
 257 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 258 00ea 23F00103 		bic	r3, r3, #1
 259 00ee DAB2     		uxtb	r2, r3
 260 00f0 4D4B     		ldr	r3, .L25+16
 261 00f2 1A70     		strb	r2, [r3]
 262              	.L13:
 206:main.c        ****             }
 207:main.c        ****     		if (0u == SW2_Read()) 
 263              		.loc 1 207 0
 264 00f4 FFF7FEFF 		bl	SW2_Read
 265 00f8 0346     		mov	r3, r0
 266 00fa 002B     		cmp	r3, #0
 267 00fc 07D1     		bne	.L14
 208:main.c        ****             {
 209:main.c        ****                 csButtStates |= BUTT2;
 268              		.loc 1 209 0
 269 00fe 4A4B     		ldr	r3, .L25+16
 270 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 271 0102 43F00203 		orr	r3, r3, #2
 272 0106 DAB2     		uxtb	r2, r3
 273 0108 474B     		ldr	r3, .L25+16
 274 010a 1A70     		strb	r2, [r3]
 275 010c 06E0     		b	.L15
 276              	.L14:
 210:main.c        ****             }
 211:main.c        ****             else
 212:main.c        ****             {
 213:main.c        ****                 csButtStates &= ~BUTT2;
 277              		.loc 1 213 0
 278 010e 464B     		ldr	r3, .L25+16
 279 0110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 0112 23F00203 		bic	r3, r3, #2
 281 0116 DAB2     		uxtb	r2, r3
 282 0118 434B     		ldr	r3, .L25+16
 283 011a 1A70     		strb	r2, [r3]
 284              	.L15:
 214:main.c        ****             }
 215:main.c        ****             /* Process any button change */
 216:main.c        ****     		if (0u != (csButtChange = csButtStates ^ csButtStatesOld)) 
 285              		.loc 1 216 0
 286 011c 424B     		ldr	r3, .L25+16
 287 011e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 288 0120 424B     		ldr	r3, .L25+20
 289 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 290 0124 5340     		eors	r3, r3, r2
 291 0126 DAB2     		uxtb	r2, r3
 292 0128 414B     		ldr	r3, .L25+24
 293 012a 1A70     		strb	r2, [r3]
 294 012c 404B     		ldr	r3, .L25+24
 295 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 296 0130 002B     		cmp	r3, #0
 297 0132 4CD0     		beq	.L16
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 10


 217:main.c        ****             {
 218:main.c        ****     			csButtStatesOld = csButtStates;
 298              		.loc 1 218 0
 299 0134 3C4B     		ldr	r3, .L25+16
 300 0136 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 301 0138 3C4B     		ldr	r3, .L25+20
 302 013a 1A70     		strb	r2, [r3]
 219:main.c        **** 
 220:main.c        ****     			/* All buttons are mapped to Note-On/Off messages */
 221:main.c        ****     			midiMsg[MIDI_MSG_TYPE] = USB_MIDI_NOTE_ON;
 303              		.loc 1 221 0
 304 013c 9023     		movs	r3, #144
 305 013e 3B71     		strb	r3, [r7, #4]
 222:main.c        ****     			
 223:main.c        ****     			/* Button 1 */
 224:main.c        ****     			if (0u != (csButtChange & BUTT1)) 
 306              		.loc 1 224 0
 307 0140 3B4B     		ldr	r3, .L25+24
 308 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 309 0144 03F00103 		and	r3, r3, #1
 310 0148 002B     		cmp	r3, #0
 311 014a 12D0     		beq	.L17
 225:main.c        ****                 {
 226:main.c        ****     				/* Button determines note number */			
 227:main.c        ****     				midiMsg[MIDI_NOTE_NUMBER] = NOTE_72;
 312              		.loc 1 227 0
 313 014c 4823     		movs	r3, #72
 314 014e 7B71     		strb	r3, [r7, #5]
 228:main.c        ****     				if (0u != (csButtStates & BUTT1))
 315              		.loc 1 228 0
 316 0150 354B     		ldr	r3, .L25+16
 317 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 318 0154 03F00103 		and	r3, r3, #1
 319 0158 002B     		cmp	r3, #0
 320 015a 02D0     		beq	.L18
 229:main.c        ****                     {
 230:main.c        ****                         /* Note On */
 231:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;		
 321              		.loc 1 231 0
 322 015c 6423     		movs	r3, #100
 323 015e BB71     		strb	r3, [r7, #6]
 324 0160 01E0     		b	.L19
 325              	.L18:
 232:main.c        ****                     }
 233:main.c        ****     				else
 234:main.c        ****                     {
 235:main.c        ****                         /* Note Off */
 236:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF;			
 326              		.loc 1 236 0
 327 0162 0023     		movs	r3, #0
 328 0164 BB71     		strb	r3, [r7, #6]
 329              	.L19:
 237:main.c        ****                     }    
 238:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 239:main.c        ****                     USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 330              		.loc 1 239 0
 331 0166 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 11


 332 0168 0320     		movs	r0, #3
 333 016a 1946     		mov	r1, r3
 334 016c 0022     		movs	r2, #0
 335 016e FFF7FEFF 		bl	USB_PutUsbMidiIn
 336              	.L17:
 240:main.c        ****     			}
 241:main.c        **** 
 242:main.c        ****     			/* Button 2 */
 243:main.c        ****     			if (0u != (csButtChange & BUTT2))
 337              		.loc 1 243 0
 338 0172 2F4B     		ldr	r3, .L25+24
 339 0174 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 340 0176 03F00203 		and	r3, r3, #2
 341 017a 002B     		cmp	r3, #0
 342 017c 27D0     		beq	.L16
 244:main.c        ****                 {
 245:main.c        ****     				/* Button determines note number */			
 246:main.c        ****     				midiMsg[MIDI_NOTE_NUMBER] = NOTE_76;
 343              		.loc 1 246 0
 344 017e 4C23     		movs	r3, #76
 345 0180 7B71     		strb	r3, [r7, #5]
 247:main.c        ****     				if (0u != (csButtStates & BUTT2))
 346              		.loc 1 247 0
 347 0182 294B     		ldr	r3, .L25+16
 348 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 349 0186 03F00203 		and	r3, r3, #2
 350 018a 002B     		cmp	r3, #0
 351 018c 02D0     		beq	.L20
 248:main.c        ****                     {
 249:main.c        ****                         /* Note On */
 250:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;  
 352              		.loc 1 250 0
 353 018e 6423     		movs	r3, #100
 354 0190 BB71     		strb	r3, [r7, #6]
 355 0192 01E0     		b	.L21
 356              	.L20:
 251:main.c        ****                     }
 252:main.c        ****     				else
 253:main.c        ****                     {
 254:main.c        ****                         /* Note Off */
 255:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF; 
 357              		.loc 1 255 0
 358 0194 0023     		movs	r3, #0
 359 0196 BB71     		strb	r3, [r7, #6]
 360              	.L21:
 256:main.c        ****                     }    
 257:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 258:main.c        ****     				USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 361              		.loc 1 258 0
 362 0198 3B1D     		adds	r3, r7, #4
 363 019a 0320     		movs	r0, #3
 364 019c 1946     		mov	r1, r3
 365 019e 0022     		movs	r2, #0
 366 01a0 FFF7FEFF 		bl	USB_PutUsbMidiIn
 259:main.c        ****                     /* Second Note message */
 260:main.c        ****                     midiMsg[MIDI_MSG_TYPE] = USB_MIDI_NOTE_ON;
 367              		.loc 1 260 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 12


 368 01a4 9023     		movs	r3, #144
 369 01a6 3B71     		strb	r3, [r7, #4]
 261:main.c        ****                 	midiMsg[MIDI_NOTE_NUMBER] = NOTE_72;
 370              		.loc 1 261 0
 371 01a8 4823     		movs	r3, #72
 372 01aa 7B71     		strb	r3, [r7, #5]
 262:main.c        ****                     if (0u != (csButtStates & BUTT2))
 373              		.loc 1 262 0
 374 01ac 1E4B     		ldr	r3, .L25+16
 375 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 376 01b0 03F00203 		and	r3, r3, #2
 377 01b4 002B     		cmp	r3, #0
 378 01b6 02D0     		beq	.L22
 263:main.c        ****                     {
 264:main.c        ****                         /* Note On */
 265:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_ON;		    
 379              		.loc 1 265 0
 380 01b8 6423     		movs	r3, #100
 381 01ba BB71     		strb	r3, [r7, #6]
 382 01bc 01E0     		b	.L23
 383              	.L22:
 266:main.c        ****                     }
 267:main.c        ****     				else
 268:main.c        ****                     {
 269:main.c        ****                         /* Note Off */
 270:main.c        ****                         midiMsg[MIDI_NOTE_VELOCITY] = VOLUME_OFF;			
 384              		.loc 1 270 0
 385 01be 0023     		movs	r3, #0
 386 01c0 BB71     		strb	r3, [r7, #6]
 387              	.L23:
 271:main.c        ****                     }    
 272:main.c        ****         			/* Put MIDI Note-On/Off message into input endpoint */
 273:main.c        ****                     USB_PutUsbMidiIn(USB_3BYTE_COMMON, midiMsg, USB_MIDI_CABLE_00);
 388              		.loc 1 273 0
 389 01c2 3B1D     		adds	r3, r7, #4
 390 01c4 0320     		movs	r0, #3
 391 01c6 1946     		mov	r1, r3
 392 01c8 0022     		movs	r2, #0
 393 01ca FFF7FEFF 		bl	USB_PutUsbMidiIn
 394              	.L16:
 274:main.c        ****     			}
 275:main.c        ****                 #if(USB_EP_MANAGEMENT_DMA_AUTO) 
 276:main.c        ****                    #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 277:main.c        ****                         MIDI1_UART_DisableRxInt();
 278:main.c        ****                         #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 279:main.c        ****                             MIDI2_UART_DisableRxInt();
 280:main.c        ****                         #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 281:main.c        ****                     #endif /* End USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */            
 282:main.c        ****                     USB_MIDI_IN_Service();
 283:main.c        ****                     #if (USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF)
 284:main.c        ****                         MIDI1_UART_EnableRxInt();
 285:main.c        ****                         #if (USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF)
 286:main.c        ****                             MIDI2_UART_EnableRxInt();
 287:main.c        ****                         #endif /* End USB_MIDI_EXT_MODE >= USB_TWO_EXT_INTRF */
 288:main.c        ****                     #endif /* End USB_MIDI_EXT_MODE >= USB_ONE_EXT_INTRF */                
 289:main.c        ****                 #endif
 290:main.c        ****     		}
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 13


 291:main.c        ****         
 292:main.c        ****             /* Check if host requested USB Suspend */
 293:main.c        ****             if( usbActivityCounter >= USB_SUSPEND_TIMEOUT ) 
 395              		.loc 1 293 0
 396 01ce 194B     		ldr	r3, .L25+28
 397 01d0 1B78     		ldrb	r3, [r3]
 398 01d2 DBB2     		uxtb	r3, r3
 399 01d4 012B     		cmp	r3, #1
 400 01d6 1ED9     		bls	.L9
 294:main.c        ****             {
 295:main.c        ****                 MIDI1_UART_Sleep();
 401              		.loc 1 295 0
 402 01d8 FFF7FEFF 		bl	MIDI1_UART_Sleep
 296:main.c        ****                 MIDI2_UART_Sleep();
 403              		.loc 1 296 0
 404 01dc FFF7FEFF 		bl	MIDI2_UART_Sleep
 297:main.c        ****                 
 298:main.c        ****                 /* Power OFF CY8CKIT-044 board */
 299:main.c        ****                 MIDI_PWR_Write(1u);     
 405              		.loc 1 299 0
 406 01e0 0120     		movs	r0, #1
 407 01e2 FFF7FEFF 		bl	MIDI_PWR_Write
 300:main.c        ****                 
 301:main.c        ****                 /***************************************************************
 302:main.c        ****                 * Disable USBFS block and set DP Interrupt for wake-up 
 303:main.c        ****                 * from sleep mode. 
 304:main.c        ****                 ***************************************************************/
 305:main.c        ****                 USB_Suspend(); 
 408              		.loc 1 305 0
 409 01e6 FFF7FEFF 		bl	USB_Suspend
 306:main.c        ****                 /* Prepares system clocks for sleep mode */
 307:main.c        ****                 CyPmSaveClocks();
 410              		.loc 1 307 0
 411 01ea FFF7FEFF 		bl	CyPmSaveClocks
 308:main.c        ****                 /***************************************************************
 309:main.c        ****                 * Switch to the Sleep Mode for the PSoC 3 or PSoC 5LP devices:
 310:main.c        ****                 *  - PM_SLEEP_TIME_NONE: wakeup time is defined by PICU source
 311:main.c        ****                 *  - PM_SLEEP_SRC_PICU: PICU wakeup source 
 312:main.c        ****                 ***************************************************************/
 313:main.c        ****                 CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_PICU);
 412              		.loc 1 313 0
 413 01ee 0020     		movs	r0, #0
 414 01f0 4021     		movs	r1, #64
 415 01f2 FFF7FEFF 		bl	CyPmSleep
 314:main.c        ****                 /* Restore clock configuration */
 315:main.c        ****                 CyPmRestoreClocks();
 416              		.loc 1 315 0
 417 01f6 FFF7FEFF 		bl	CyPmRestoreClocks
 316:main.c        ****                 /* Enable USBFS block after power-down mode */
 317:main.c        ****                 USB_Resume();
 418              		.loc 1 317 0
 419 01fa FFF7FEFF 		bl	USB_Resume
 318:main.c        ****                 
 319:main.c        ****                 /* Enable output endpoint */
 320:main.c        ****                 USB_MIDI_Init();
 420              		.loc 1 320 0
 421 01fe FFF7FEFF 		bl	USB_MIDI_Init
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 14


 321:main.c        ****                 
 322:main.c        ****                 /* Power ON CY8CKIT-044 board */
 323:main.c        ****                 MIDI_PWR_Write(0u);
 422              		.loc 1 323 0
 423 0202 0020     		movs	r0, #0
 424 0204 FFF7FEFF 		bl	MIDI_PWR_Write
 324:main.c        ****                 
 325:main.c        ****                 MIDI1_UART_Wakeup();
 425              		.loc 1 325 0
 426 0208 FFF7FEFF 		bl	MIDI1_UART_Wakeup
 326:main.c        ****                 MIDI2_UART_Wakeup();
 427              		.loc 1 326 0
 428 020c FFF7FEFF 		bl	MIDI2_UART_Wakeup
 327:main.c        ****                 usbActivityCounter = 0u; /* Re-init USB Activity Counter*/
 429              		.loc 1 327 0
 430 0210 084B     		ldr	r3, .L25+28
 431 0212 0022     		movs	r2, #0
 432 0214 1A70     		strb	r2, [r3]
 433              	.L9:
 328:main.c        ****             }
 329:main.c        ****         }
 330:main.c        ****     }
 434              		.loc 1 330 0
 435 0216 10E7     		b	.L24
 436              	.L26:
 437              		.align	2
 438              	.L25:
 439 0218 00000000 		.word	SleepIsr
 440 021c 00000000 		.word	USB_MIDI1_InqFlags
 441 0220 00000000 		.word	MIDI_IDENTITY_REPLY
 442 0224 00000000 		.word	USB_MIDI2_InqFlags
 443 0228 00000000 		.word	csButtStates
 444 022c 00000000 		.word	csButtStatesOld
 445 0230 00000000 		.word	csButtChange
 446 0234 00000000 		.word	usbActivityCounter
 447              		.cfi_endproc
 448              	.LFE64:
 449              		.size	main, .-main
 450              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 451              		.align	2
 452              		.global	USB_callbackLocalMidiEvent
 453              		.thumb
 454              		.thumb_func
 455              		.type	USB_callbackLocalMidiEvent, %function
 456              	USB_callbackLocalMidiEvent:
 457              	.LFB65:
 331:main.c        **** }
 332:main.c        **** 
 333:main.c        **** 
 334:main.c        **** /*******************************************************************************
 335:main.c        **** * Function Name: USB_callbackLocalMidiEvent
 336:main.c        **** ********************************************************************************
 337:main.c        **** * Summary: Local processing of the USB MIDI out-events.
 338:main.c        **** *
 339:main.c        **** *******************************************************************************/
 340:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
 341:main.c        **** {
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 15


 458              		.loc 1 341 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 8
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462 0000 80B5     		push	{r7, lr}
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 7, -8
 465              		.cfi_offset 14, -4
 466 0002 82B0     		sub	sp, sp, #8
 467              		.cfi_def_cfa_offset 16
 468 0004 00AF     		add	r7, sp, #0
 469              		.cfi_def_cfa_register 7
 470 0006 0346     		mov	r3, r0
 471 0008 3960     		str	r1, [r7]
 472 000a FB71     		strb	r3, [r7, #7]
 342:main.c        ****     /* Support General System On/Off Message. */
 343:main.c        ****     if((0u == (USB_MIDI1_InqFlags & USB_INQ_SYSEX_FLAG)) \
 473              		.loc 1 343 0
 474 000c BC4B     		ldr	r3, .L76
 475 000e 1B78     		ldrb	r3, [r3]
 476 0010 DBB2     		uxtb	r3, r3
 477 0012 03F00103 		and	r3, r3, #1
 478 0016 002B     		cmp	r3, #0
 479 0018 1AD1     		bne	.L28
 344:main.c        ****             && (0u != (inqFlagsOld & USB_INQ_SYSEX_FLAG)))
 480              		.loc 1 344 0
 481 001a BA4B     		ldr	r3, .L76+4
 482 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 483 001e 03F00103 		and	r3, r3, #1
 484 0022 002B     		cmp	r3, #0
 485 0024 14D0     		beq	.L28
 345:main.c        ****     {
 346:main.c        ****         if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX_GEN_MESSAGE)
 486              		.loc 1 346 0
 487 0026 3B68     		ldr	r3, [r7]
 488 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 489 002a 092B     		cmp	r3, #9
 490 002c 10D1     		bne	.L28
 347:main.c        ****         {
 348:main.c        ****             if(midiMsg[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_SYSTEM_ON)
 491              		.loc 1 348 0
 492 002e 3B68     		ldr	r3, [r7]
 493 0030 0133     		adds	r3, r3, #1
 494 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 495 0034 012B     		cmp	r3, #1
 496 0036 03D1     		bne	.L29
 349:main.c        ****             {
 350:main.c        ****                 MIDI_PWR_Write(0u); /* Power ON */
 497              		.loc 1 350 0
 498 0038 0020     		movs	r0, #0
 499 003a FFF7FEFF 		bl	MIDI_PWR_Write
 500 003e 07E0     		b	.L28
 501              	.L29:
 351:main.c        ****             }
 352:main.c        ****             else if(midiMsg[USB_EVENT_BYTE1] == USB_MIDI_SYSEX_SYSTEM_OFF)
 502              		.loc 1 352 0
 503 0040 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 16


 504 0042 0133     		adds	r3, r3, #1
 505 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 506 0046 022B     		cmp	r3, #2
 507 0048 02D1     		bne	.L28
 353:main.c        ****             {
 354:main.c        ****                 MIDI_PWR_Write(1u); /* Power OFF */
 508              		.loc 1 354 0
 509 004a 0120     		movs	r0, #1
 510 004c FFF7FEFF 		bl	MIDI_PWR_Write
 511              	.L28:
 355:main.c        ****             }
 356:main.c        ****         }
 357:main.c        ****     }
 358:main.c        ****     switch (midiMsg[USB_EVENT_BYTE0])
 512              		.loc 1 358 0
 513 0050 3B68     		ldr	r3, [r7]
 514 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 515 0054 902B     		cmp	r3, #144
 516 0056 06D0     		beq	.L31
 517 0058 B02B     		cmp	r3, #176
 518 005a 00F0DB81 		beq	.L32
 519 005e 802B     		cmp	r3, #128
 520 0060 00F03681 		beq	.L33
 521 0064 A3E2     		b	.L30
 522              	.L31:
 359:main.c        ****     //if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_NOTE_ON)
 360:main.c        ****     {
 361:main.c        ****     case USB_MIDI_NOTE_ON:
 362:main.c        ****         if(midiMsg[USB_EVENT_BYTE2] == 0x00)  //Note On with velocity 0 should be treated like note
 523              		.loc 1 362 0
 524 0066 3B68     		ldr	r3, [r7]
 525 0068 0233     		adds	r3, r3, #2
 526 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527 006c 002B     		cmp	r3, #0
 528 006e 40F09D80 		bne	.L34
 363:main.c        ****         {
 364:main.c        ****         switch (midiMsg[USB_EVENT_BYTE1]/8)
 529              		.loc 1 364 0
 530 0072 3B68     		ldr	r3, [r7]
 531 0074 0133     		adds	r3, r3, #1
 532 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 533 0078 DB08     		lsrs	r3, r3, #3
 534 007a DBB2     		uxtb	r3, r3
 535 007c 052B     		cmp	r3, #5
 536 007e 00F29180 		bhi	.L35
 537 0082 01A2     		adr	r2, .L37
 538 0084 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 539              		.p2align 2
 540              	.L37:
 541 0088 A1000000 		.word	.L36+1
 542 008c C9000000 		.word	.L38+1
 543 0090 F5000000 		.word	.L39+1
 544 0094 21010000 		.word	.L40+1
 545 0098 4D010000 		.word	.L41+1
 546 009c 79010000 		.word	.L42+1
 547              		.p2align 1
 548              	.L36:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 17


 365:main.c        ****             {
 366:main.c        ****                 case 0: 
 367:main.c        ****                 
 368:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 549              		.loc 1 368 0
 550 00a0 FFF7FEFF 		bl	Keys_Notes_1_Read
 551 00a4 0346     		mov	r3, r0
 552 00a6 DAB2     		uxtb	r2, r3
 553 00a8 3B68     		ldr	r3, [r7]
 554 00aa 0133     		adds	r3, r3, #1
 555 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 556 00ae 1946     		mov	r1, r3
 557 00b0 0123     		movs	r3, #1
 558 00b2 8B40     		lsls	r3, r3, r1
 559 00b4 DBB2     		uxtb	r3, r3
 560 00b6 DB43     		mvns	r3, r3
 561 00b8 DBB2     		uxtb	r3, r3
 562 00ba 1340     		ands	r3, r3, r2
 563 00bc DBB2     		uxtb	r3, r3
 564 00be DBB2     		uxtb	r3, r3
 565 00c0 1846     		mov	r0, r3
 566 00c2 FFF7FEFF 		bl	Keys_Notes_1_Write
 369:main.c        ****                    //Keys_Notes_4_Write(0x40);
 370:main.c        ****                     break;
 567              		.loc 1 370 0
 568 00c6 6DE0     		b	.L35
 569              	.L38:
 371:main.c        ****                 
 372:main.c        ****                 case 1:
 373:main.c        ****                 
 374:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8))
 570              		.loc 1 374 0
 571 00c8 FFF7FEFF 		bl	Keys_Notes_2_Read
 572 00cc 0346     		mov	r3, r0
 573 00ce D9B2     		uxtb	r1, r3
 574 00d0 3B68     		ldr	r3, [r7]
 575 00d2 0133     		adds	r3, r3, #1
 576 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 577 00d6 083B     		subs	r3, r3, #8
 578 00d8 0122     		movs	r2, #1
 579 00da 02FA03F3 		lsl	r3, r2, r3
 580 00de DBB2     		uxtb	r3, r3
 581 00e0 DB43     		mvns	r3, r3
 582 00e2 DBB2     		uxtb	r3, r3
 583 00e4 0A46     		mov	r2, r1
 584 00e6 1340     		ands	r3, r3, r2
 585 00e8 DBB2     		uxtb	r3, r3
 586 00ea DBB2     		uxtb	r3, r3
 587 00ec 1846     		mov	r0, r3
 588 00ee FFF7FEFF 		bl	Keys_Notes_2_Write
 375:main.c        ****                    // Keys_Notes_4_Write(0x02);
 376:main.c        ****                     break;
 589              		.loc 1 376 0
 590 00f2 57E0     		b	.L35
 591              	.L39:
 377:main.c        ****                 
 378:main.c        ****                 case 2:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 18


 379:main.c        ****                 
 380:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)
 592              		.loc 1 380 0
 593 00f4 FFF7FEFF 		bl	Keys_Notes_3_Read
 594 00f8 0346     		mov	r3, r0
 595 00fa D9B2     		uxtb	r1, r3
 596 00fc 3B68     		ldr	r3, [r7]
 597 00fe 0133     		adds	r3, r3, #1
 598 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 599 0102 103B     		subs	r3, r3, #16
 600 0104 0122     		movs	r2, #1
 601 0106 02FA03F3 		lsl	r3, r2, r3
 602 010a DBB2     		uxtb	r3, r3
 603 010c DB43     		mvns	r3, r3
 604 010e DBB2     		uxtb	r3, r3
 605 0110 0A46     		mov	r2, r1
 606 0112 1340     		ands	r3, r3, r2
 607 0114 DBB2     		uxtb	r3, r3
 608 0116 DBB2     		uxtb	r3, r3
 609 0118 1846     		mov	r0, r3
 610 011a FFF7FEFF 		bl	Keys_Notes_3_Write
 381:main.c        ****                    // Keys_Notes_4_Write(0x04);
 382:main.c        ****                     break;
 611              		.loc 1 382 0
 612 011e 41E0     		b	.L35
 613              	.L40:
 383:main.c        ****                 
 384:main.c        ****                 case 3:
 385:main.c        ****                 
 386:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-24)
 614              		.loc 1 386 0
 615 0120 FFF7FEFF 		bl	Keys_Notes_4_Read
 616 0124 0346     		mov	r3, r0
 617 0126 D9B2     		uxtb	r1, r3
 618 0128 3B68     		ldr	r3, [r7]
 619 012a 0133     		adds	r3, r3, #1
 620 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 621 012e 183B     		subs	r3, r3, #24
 622 0130 0122     		movs	r2, #1
 623 0132 02FA03F3 		lsl	r3, r2, r3
 624 0136 DBB2     		uxtb	r3, r3
 625 0138 DB43     		mvns	r3, r3
 626 013a DBB2     		uxtb	r3, r3
 627 013c 0A46     		mov	r2, r1
 628 013e 1340     		ands	r3, r3, r2
 629 0140 DBB2     		uxtb	r3, r3
 630 0142 DBB2     		uxtb	r3, r3
 631 0144 1846     		mov	r0, r3
 632 0146 FFF7FEFF 		bl	Keys_Notes_4_Write
 387:main.c        ****                   //  Keys_Notes_4_Write(0x08);
 388:main.c        ****                     break;
 633              		.loc 1 388 0
 634 014a 2BE0     		b	.L35
 635              	.L41:
 389:main.c        ****                 
 390:main.c        ****                 case 4:
 391:main.c        ****                 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 19


 392:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-32)
 636              		.loc 1 392 0
 637 014c FFF7FEFF 		bl	Keys_Notes_5_Read
 638 0150 0346     		mov	r3, r0
 639 0152 D9B2     		uxtb	r1, r3
 640 0154 3B68     		ldr	r3, [r7]
 641 0156 0133     		adds	r3, r3, #1
 642 0158 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 643 015a 203B     		subs	r3, r3, #32
 644 015c 0122     		movs	r2, #1
 645 015e 02FA03F3 		lsl	r3, r2, r3
 646 0162 DBB2     		uxtb	r3, r3
 647 0164 DB43     		mvns	r3, r3
 648 0166 DBB2     		uxtb	r3, r3
 649 0168 0A46     		mov	r2, r1
 650 016a 1340     		ands	r3, r3, r2
 651 016c DBB2     		uxtb	r3, r3
 652 016e DBB2     		uxtb	r3, r3
 653 0170 1846     		mov	r0, r3
 654 0172 FFF7FEFF 		bl	Keys_Notes_5_Write
 393:main.c        ****                  //   Keys_Notes_4_Write(0x10);
 394:main.c        ****                     break;
 655              		.loc 1 394 0
 656 0176 15E0     		b	.L35
 657              	.L42:
 395:main.c        ****                                 
 396:main.c        ****                 case 5:
 397:main.c        ****                 
 398:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-40)
 658              		.loc 1 398 0
 659 0178 FFF7FEFF 		bl	Keys_Notes_6_Read
 660 017c 0346     		mov	r3, r0
 661 017e D9B2     		uxtb	r1, r3
 662 0180 3B68     		ldr	r3, [r7]
 663 0182 0133     		adds	r3, r3, #1
 664 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 665 0186 283B     		subs	r3, r3, #40
 666 0188 0122     		movs	r2, #1
 667 018a 02FA03F3 		lsl	r3, r2, r3
 668 018e DBB2     		uxtb	r3, r3
 669 0190 DB43     		mvns	r3, r3
 670 0192 DBB2     		uxtb	r3, r3
 671 0194 0A46     		mov	r2, r1
 672 0196 1340     		ands	r3, r3, r2
 673 0198 DBB2     		uxtb	r3, r3
 674 019a DBB2     		uxtb	r3, r3
 675 019c 1846     		mov	r0, r3
 676 019e FFF7FEFF 		bl	Keys_Notes_6_Write
 399:main.c        ****                   //  Keys_Notes_4_Write(0x20);
 400:main.c        ****                     break;           
 677              		.loc 1 400 0
 678 01a2 00BF     		nop
 679              	.L35:
 401:main.c        ****             }
 402:main.c        ****             LED_OutA_Write(0);
 680              		.loc 1 402 0
 681 01a4 0020     		movs	r0, #0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 20


 682 01a6 FFF7FEFF 		bl	LED_OutA_Write
 403:main.c        ****         }
 404:main.c        ****         else    
 405:main.c        ****         {
 406:main.c        ****             switch (midiMsg[USB_EVENT_BYTE1]/8)
 407:main.c        ****             {
 408:main.c        ****                 case 0: 
 409:main.c        ****                 
 410:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() | 0x01 << midiMsg[USB_EVENT_BYTE1]);
 411:main.c        ****                    //Keys_Notes_4_Write(0x40);
 412:main.c        ****                     break;
 413:main.c        ****                 
 414:main.c        ****                 case 1:
 415:main.c        ****                 
 416:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-8)); 
 417:main.c        ****                    // Keys_Notes_4_Write(0x02);
 418:main.c        ****                     break;
 419:main.c        ****                 
 420:main.c        ****                 case 2:
 421:main.c        ****                 
 422:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-16));
 423:main.c        ****                    // Keys_Notes_4_Write(0x04);
 424:main.c        ****                     break;
 425:main.c        ****                 
 426:main.c        ****                 case 3:
 427:main.c        ****                 
 428:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-24));
 429:main.c        ****                   //  Keys_Notes_4_Write(0x08);
 430:main.c        ****                     break;
 431:main.c        ****                 
 432:main.c        ****                 case 4:
 433:main.c        ****                 
 434:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-32));
 435:main.c        ****                  //   Keys_Notes_4_Write(0x10);
 436:main.c        ****                     break;
 437:main.c        ****                                 
 438:main.c        ****                 case 5:
 439:main.c        ****                 
 440:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() | 0x01 << (midiMsg[USB_EVENT_BYTE1]-40));
 441:main.c        ****                   //  Keys_Notes_4_Write(0x20);
 442:main.c        ****                     break;           
 443:main.c        ****             }
 444:main.c        **** 
 445:main.c        ****             LED_OutA_Write(1);
 446:main.c        ****         }
 447:main.c        ****         break;  
 683              		.loc 1 447 0
 684 01aa 00E2     		b	.L30
 685              	.L34:
 406:main.c        ****             {
 686              		.loc 1 406 0
 687 01ac 3B68     		ldr	r3, [r7]
 688 01ae 0133     		adds	r3, r3, #1
 689 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 690 01b2 DB08     		lsrs	r3, r3, #3
 691 01b4 DBB2     		uxtb	r3, r3
 692 01b6 052B     		cmp	r3, #5
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 21


 693 01b8 00F28680 		bhi	.L44
 694 01bc 01A2     		adr	r2, .L46
 695 01be 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 696 01c2 00BF     		.p2align 2
 697              	.L46:
 698 01c4 DD010000 		.word	.L45+1
 699 01c8 01020000 		.word	.L47+1
 700 01cc 29020000 		.word	.L48+1
 701 01d0 51020000 		.word	.L49+1
 702 01d4 79020000 		.word	.L50+1
 703 01d8 A1020000 		.word	.L51+1
 704              		.p2align 1
 705              	.L45:
 410:main.c        ****                    //Keys_Notes_4_Write(0x40);
 706              		.loc 1 410 0
 707 01dc FFF7FEFF 		bl	Keys_Notes_1_Read
 708 01e0 0346     		mov	r3, r0
 709 01e2 DAB2     		uxtb	r2, r3
 710 01e4 3B68     		ldr	r3, [r7]
 711 01e6 0133     		adds	r3, r3, #1
 712 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 713 01ea 1946     		mov	r1, r3
 714 01ec 0123     		movs	r3, #1
 715 01ee 8B40     		lsls	r3, r3, r1
 716 01f0 DBB2     		uxtb	r3, r3
 717 01f2 1343     		orrs	r3, r3, r2
 718 01f4 DBB2     		uxtb	r3, r3
 719 01f6 DBB2     		uxtb	r3, r3
 720 01f8 1846     		mov	r0, r3
 721 01fa FFF7FEFF 		bl	Keys_Notes_1_Write
 412:main.c        ****                 
 722              		.loc 1 412 0
 723 01fe 63E0     		b	.L44
 724              	.L47:
 416:main.c        ****                    // Keys_Notes_4_Write(0x02);
 725              		.loc 1 416 0
 726 0200 FFF7FEFF 		bl	Keys_Notes_2_Read
 727 0204 0346     		mov	r3, r0
 728 0206 D9B2     		uxtb	r1, r3
 729 0208 3B68     		ldr	r3, [r7]
 730 020a 0133     		adds	r3, r3, #1
 731 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 732 020e 083B     		subs	r3, r3, #8
 733 0210 0122     		movs	r2, #1
 734 0212 02FA03F3 		lsl	r3, r2, r3
 735 0216 DBB2     		uxtb	r3, r3
 736 0218 0A46     		mov	r2, r1
 737 021a 1343     		orrs	r3, r3, r2
 738 021c DBB2     		uxtb	r3, r3
 739 021e DBB2     		uxtb	r3, r3
 740 0220 1846     		mov	r0, r3
 741 0222 FFF7FEFF 		bl	Keys_Notes_2_Write
 418:main.c        ****                 
 742              		.loc 1 418 0
 743 0226 4FE0     		b	.L44
 744              	.L48:
 422:main.c        ****                    // Keys_Notes_4_Write(0x04);
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 22


 745              		.loc 1 422 0
 746 0228 FFF7FEFF 		bl	Keys_Notes_3_Read
 747 022c 0346     		mov	r3, r0
 748 022e D9B2     		uxtb	r1, r3
 749 0230 3B68     		ldr	r3, [r7]
 750 0232 0133     		adds	r3, r3, #1
 751 0234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 752 0236 103B     		subs	r3, r3, #16
 753 0238 0122     		movs	r2, #1
 754 023a 02FA03F3 		lsl	r3, r2, r3
 755 023e DBB2     		uxtb	r3, r3
 756 0240 0A46     		mov	r2, r1
 757 0242 1343     		orrs	r3, r3, r2
 758 0244 DBB2     		uxtb	r3, r3
 759 0246 DBB2     		uxtb	r3, r3
 760 0248 1846     		mov	r0, r3
 761 024a FFF7FEFF 		bl	Keys_Notes_3_Write
 424:main.c        ****                 
 762              		.loc 1 424 0
 763 024e 3BE0     		b	.L44
 764              	.L49:
 428:main.c        ****                   //  Keys_Notes_4_Write(0x08);
 765              		.loc 1 428 0
 766 0250 FFF7FEFF 		bl	Keys_Notes_4_Read
 767 0254 0346     		mov	r3, r0
 768 0256 D9B2     		uxtb	r1, r3
 769 0258 3B68     		ldr	r3, [r7]
 770 025a 0133     		adds	r3, r3, #1
 771 025c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 772 025e 183B     		subs	r3, r3, #24
 773 0260 0122     		movs	r2, #1
 774 0262 02FA03F3 		lsl	r3, r2, r3
 775 0266 DBB2     		uxtb	r3, r3
 776 0268 0A46     		mov	r2, r1
 777 026a 1343     		orrs	r3, r3, r2
 778 026c DBB2     		uxtb	r3, r3
 779 026e DBB2     		uxtb	r3, r3
 780 0270 1846     		mov	r0, r3
 781 0272 FFF7FEFF 		bl	Keys_Notes_4_Write
 430:main.c        ****                 
 782              		.loc 1 430 0
 783 0276 27E0     		b	.L44
 784              	.L50:
 434:main.c        ****                  //   Keys_Notes_4_Write(0x10);
 785              		.loc 1 434 0
 786 0278 FFF7FEFF 		bl	Keys_Notes_5_Read
 787 027c 0346     		mov	r3, r0
 788 027e D9B2     		uxtb	r1, r3
 789 0280 3B68     		ldr	r3, [r7]
 790 0282 0133     		adds	r3, r3, #1
 791 0284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 792 0286 203B     		subs	r3, r3, #32
 793 0288 0122     		movs	r2, #1
 794 028a 02FA03F3 		lsl	r3, r2, r3
 795 028e DBB2     		uxtb	r3, r3
 796 0290 0A46     		mov	r2, r1
 797 0292 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 23


 798 0294 DBB2     		uxtb	r3, r3
 799 0296 DBB2     		uxtb	r3, r3
 800 0298 1846     		mov	r0, r3
 801 029a FFF7FEFF 		bl	Keys_Notes_5_Write
 436:main.c        ****                                 
 802              		.loc 1 436 0
 803 029e 13E0     		b	.L44
 804              	.L51:
 440:main.c        ****                   //  Keys_Notes_4_Write(0x20);
 805              		.loc 1 440 0
 806 02a0 FFF7FEFF 		bl	Keys_Notes_6_Read
 807 02a4 0346     		mov	r3, r0
 808 02a6 D9B2     		uxtb	r1, r3
 809 02a8 3B68     		ldr	r3, [r7]
 810 02aa 0133     		adds	r3, r3, #1
 811 02ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 812 02ae 283B     		subs	r3, r3, #40
 813 02b0 0122     		movs	r2, #1
 814 02b2 02FA03F3 		lsl	r3, r2, r3
 815 02b6 DBB2     		uxtb	r3, r3
 816 02b8 0A46     		mov	r2, r1
 817 02ba 1343     		orrs	r3, r3, r2
 818 02bc DBB2     		uxtb	r3, r3
 819 02be DBB2     		uxtb	r3, r3
 820 02c0 1846     		mov	r0, r3
 821 02c2 FFF7FEFF 		bl	Keys_Notes_6_Write
 442:main.c        ****             }
 822              		.loc 1 442 0
 823 02c6 00BF     		nop
 824              	.L44:
 445:main.c        ****         }
 825              		.loc 1 445 0
 826 02c8 0120     		movs	r0, #1
 827 02ca FFF7FEFF 		bl	LED_OutA_Write
 828              		.loc 1 447 0
 829 02ce 6EE1     		b	.L30
 830              	.L33:
 448:main.c        ****         
 449:main.c        ****     //if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_NOTE_OFF)
 450:main.c        ****     case USB_MIDI_NOTE_OFF:
 451:main.c        ****         
 452:main.c        ****         switch (midiMsg[USB_EVENT_BYTE1]/8)
 831              		.loc 1 452 0
 832 02d0 3B68     		ldr	r3, [r7]
 833 02d2 0133     		adds	r3, r3, #1
 834 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 835 02d6 DB08     		lsrs	r3, r3, #3
 836 02d8 DBB2     		uxtb	r3, r3
 837 02da 052B     		cmp	r3, #5
 838 02dc 00F29680 		bhi	.L52
 839 02e0 01A2     		adr	r2, .L54
 840 02e2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 841 02e6 00BF     		.p2align 2
 842              	.L54:
 843 02e8 09030000 		.word	.L53+1
 844 02ec 31030000 		.word	.L55+1
 845 02f0 5D030000 		.word	.L56+1
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 24


 846 02f4 89030000 		.word	.L57+1
 847 02f8 B5030000 		.word	.L58+1
 848 02fc E1030000 		.word	.L59+1
 849              		.p2align 1
 850              	.L77:
 851              		.align	2
 852              	.L76:
 853 0300 00000000 		.word	USB_MIDI1_InqFlags
 854 0304 00000000 		.word	inqFlagsOld
 855              	.L53:
 453:main.c        ****             {
 454:main.c        ****                 case 0: 
 455:main.c        ****                 
 456:main.c        ****                    Keys_Notes_1_Write(Keys_Notes_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 856              		.loc 1 456 0
 857 0308 FFF7FEFF 		bl	Keys_Notes_1_Read
 858 030c 0346     		mov	r3, r0
 859 030e DAB2     		uxtb	r2, r3
 860 0310 3B68     		ldr	r3, [r7]
 861 0312 0133     		adds	r3, r3, #1
 862 0314 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 863 0316 1946     		mov	r1, r3
 864 0318 0123     		movs	r3, #1
 865 031a 8B40     		lsls	r3, r3, r1
 866 031c DBB2     		uxtb	r3, r3
 867 031e DB43     		mvns	r3, r3
 868 0320 DBB2     		uxtb	r3, r3
 869 0322 1340     		ands	r3, r3, r2
 870 0324 DBB2     		uxtb	r3, r3
 871 0326 DBB2     		uxtb	r3, r3
 872 0328 1846     		mov	r0, r3
 873 032a FFF7FEFF 		bl	Keys_Notes_1_Write
 457:main.c        ****                    //Keys_Notes_4_Write(0x40);
 458:main.c        ****                     break;
 874              		.loc 1 458 0
 875 032e 6DE0     		b	.L52
 876              	.L55:
 459:main.c        ****                 
 460:main.c        ****                 case 1:
 461:main.c        ****                 
 462:main.c        ****                    Keys_Notes_2_Write(Keys_Notes_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8))
 877              		.loc 1 462 0
 878 0330 FFF7FEFF 		bl	Keys_Notes_2_Read
 879 0334 0346     		mov	r3, r0
 880 0336 D9B2     		uxtb	r1, r3
 881 0338 3B68     		ldr	r3, [r7]
 882 033a 0133     		adds	r3, r3, #1
 883 033c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 884 033e 083B     		subs	r3, r3, #8
 885 0340 0122     		movs	r2, #1
 886 0342 02FA03F3 		lsl	r3, r2, r3
 887 0346 DBB2     		uxtb	r3, r3
 888 0348 DB43     		mvns	r3, r3
 889 034a DBB2     		uxtb	r3, r3
 890 034c 0A46     		mov	r2, r1
 891 034e 1340     		ands	r3, r3, r2
 892 0350 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 25


 893 0352 DBB2     		uxtb	r3, r3
 894 0354 1846     		mov	r0, r3
 895 0356 FFF7FEFF 		bl	Keys_Notes_2_Write
 463:main.c        ****                    // Keys_Notes_4_Write(0x02);
 464:main.c        ****                     break;
 896              		.loc 1 464 0
 897 035a 57E0     		b	.L52
 898              	.L56:
 465:main.c        ****                 
 466:main.c        ****                 case 2:
 467:main.c        ****                 
 468:main.c        ****                    Keys_Notes_3_Write(Keys_Notes_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)
 899              		.loc 1 468 0
 900 035c FFF7FEFF 		bl	Keys_Notes_3_Read
 901 0360 0346     		mov	r3, r0
 902 0362 D9B2     		uxtb	r1, r3
 903 0364 3B68     		ldr	r3, [r7]
 904 0366 0133     		adds	r3, r3, #1
 905 0368 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 906 036a 103B     		subs	r3, r3, #16
 907 036c 0122     		movs	r2, #1
 908 036e 02FA03F3 		lsl	r3, r2, r3
 909 0372 DBB2     		uxtb	r3, r3
 910 0374 DB43     		mvns	r3, r3
 911 0376 DBB2     		uxtb	r3, r3
 912 0378 0A46     		mov	r2, r1
 913 037a 1340     		ands	r3, r3, r2
 914 037c DBB2     		uxtb	r3, r3
 915 037e DBB2     		uxtb	r3, r3
 916 0380 1846     		mov	r0, r3
 917 0382 FFF7FEFF 		bl	Keys_Notes_3_Write
 469:main.c        ****                    // Keys_Notes_4_Write(0x04);
 470:main.c        ****                     break;
 918              		.loc 1 470 0
 919 0386 41E0     		b	.L52
 920              	.L57:
 471:main.c        ****                 
 472:main.c        ****                 case 3:
 473:main.c        ****                 
 474:main.c        ****                    Keys_Notes_4_Write(Keys_Notes_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-24)
 921              		.loc 1 474 0
 922 0388 FFF7FEFF 		bl	Keys_Notes_4_Read
 923 038c 0346     		mov	r3, r0
 924 038e D9B2     		uxtb	r1, r3
 925 0390 3B68     		ldr	r3, [r7]
 926 0392 0133     		adds	r3, r3, #1
 927 0394 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 928 0396 183B     		subs	r3, r3, #24
 929 0398 0122     		movs	r2, #1
 930 039a 02FA03F3 		lsl	r3, r2, r3
 931 039e DBB2     		uxtb	r3, r3
 932 03a0 DB43     		mvns	r3, r3
 933 03a2 DBB2     		uxtb	r3, r3
 934 03a4 0A46     		mov	r2, r1
 935 03a6 1340     		ands	r3, r3, r2
 936 03a8 DBB2     		uxtb	r3, r3
 937 03aa DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 26


 938 03ac 1846     		mov	r0, r3
 939 03ae FFF7FEFF 		bl	Keys_Notes_4_Write
 475:main.c        ****                   //  Keys_Notes_4_Write(0x08);
 476:main.c        ****                     break;
 940              		.loc 1 476 0
 941 03b2 2BE0     		b	.L52
 942              	.L58:
 477:main.c        ****                 
 478:main.c        ****                 case 4:
 479:main.c        ****                 
 480:main.c        ****                    Keys_Notes_5_Write(Keys_Notes_5_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-32)
 943              		.loc 1 480 0
 944 03b4 FFF7FEFF 		bl	Keys_Notes_5_Read
 945 03b8 0346     		mov	r3, r0
 946 03ba D9B2     		uxtb	r1, r3
 947 03bc 3B68     		ldr	r3, [r7]
 948 03be 0133     		adds	r3, r3, #1
 949 03c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 950 03c2 203B     		subs	r3, r3, #32
 951 03c4 0122     		movs	r2, #1
 952 03c6 02FA03F3 		lsl	r3, r2, r3
 953 03ca DBB2     		uxtb	r3, r3
 954 03cc DB43     		mvns	r3, r3
 955 03ce DBB2     		uxtb	r3, r3
 956 03d0 0A46     		mov	r2, r1
 957 03d2 1340     		ands	r3, r3, r2
 958 03d4 DBB2     		uxtb	r3, r3
 959 03d6 DBB2     		uxtb	r3, r3
 960 03d8 1846     		mov	r0, r3
 961 03da FFF7FEFF 		bl	Keys_Notes_5_Write
 481:main.c        ****                  //   Keys_Notes_4_Write(0x10);
 482:main.c        ****                     break;
 962              		.loc 1 482 0
 963 03de 15E0     		b	.L52
 964              	.L59:
 483:main.c        ****                                 
 484:main.c        ****                 case 5:
 485:main.c        ****                 
 486:main.c        ****                    Keys_Notes_6_Write(Keys_Notes_6_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-40)
 965              		.loc 1 486 0
 966 03e0 FFF7FEFF 		bl	Keys_Notes_6_Read
 967 03e4 0346     		mov	r3, r0
 968 03e6 D9B2     		uxtb	r1, r3
 969 03e8 3B68     		ldr	r3, [r7]
 970 03ea 0133     		adds	r3, r3, #1
 971 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 972 03ee 283B     		subs	r3, r3, #40
 973 03f0 0122     		movs	r2, #1
 974 03f2 02FA03F3 		lsl	r3, r2, r3
 975 03f6 DBB2     		uxtb	r3, r3
 976 03f8 DB43     		mvns	r3, r3
 977 03fa DBB2     		uxtb	r3, r3
 978 03fc 0A46     		mov	r2, r1
 979 03fe 1340     		ands	r3, r3, r2
 980 0400 DBB2     		uxtb	r3, r3
 981 0402 DBB2     		uxtb	r3, r3
 982 0404 1846     		mov	r0, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 27


 983 0406 FFF7FEFF 		bl	Keys_Notes_6_Write
 487:main.c        ****                   //  Keys_Notes_4_Write(0x20);
 488:main.c        ****                     break;           
 984              		.loc 1 488 0
 985 040a 00BF     		nop
 986              	.L52:
 489:main.c        ****             }
 490:main.c        ****             LED_OutA_Write(0);
 987              		.loc 1 490 0
 988 040c 0020     		movs	r0, #0
 989 040e FFF7FEFF 		bl	LED_OutA_Write
 491:main.c        ****             break;
 990              		.loc 1 491 0
 991 0412 CCE0     		b	.L30
 992              	.L32:
 492:main.c        ****     case USB_MIDI_CONTROL_CHANGE:
 493:main.c        ****             switch (midiMsg[USB_EVENT_BYTE1]/8)
 993              		.loc 1 493 0
 994 0414 3B68     		ldr	r3, [r7]
 995 0416 0133     		adds	r3, r3, #1
 996 0418 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 997 041a DB08     		lsrs	r3, r3, #3
 998 041c DBB2     		uxtb	r3, r3
 999 041e 032B     		cmp	r3, #3
 1000 0420 00F2C480 		bhi	.L74
 1001 0424 01A2     		adr	r2, .L62
 1002 0426 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1003 042a 00BF     		.p2align 2
 1004              	.L62:
 1005 042c 3D040000 		.word	.L61+1
 1006 0430 93040000 		.word	.L63+1
 1007 0434 F1040000 		.word	.L64+1
 1008 0438 4F050000 		.word	.L65+1
 1009              		.p2align 1
 1010              	.L61:
 494:main.c        ****             {
 495:main.c        ****                 case 0: 
 496:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1011              		.loc 1 496 0
 1012 043c 3B68     		ldr	r3, [r7]
 1013 043e 0233     		adds	r3, r3, #2
 1014 0440 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1015 0442 3E2B     		cmp	r3, #62
 1016 0444 13D8     		bhi	.L66
 497:main.c        ****                     {
 498:main.c        ****                     Tabs_1_Write(Tabs_1_Read() & ~(0x01 << midiMsg[USB_EVENT_BYTE1]));
 1017              		.loc 1 498 0
 1018 0446 FFF7FEFF 		bl	Tabs_1_Read
 1019 044a 0346     		mov	r3, r0
 1020 044c DAB2     		uxtb	r2, r3
 1021 044e 3B68     		ldr	r3, [r7]
 1022 0450 0133     		adds	r3, r3, #1
 1023 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1024 0454 1946     		mov	r1, r3
 1025 0456 0123     		movs	r3, #1
 1026 0458 8B40     		lsls	r3, r3, r1
 1027 045a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 28


 1028 045c DB43     		mvns	r3, r3
 1029 045e DBB2     		uxtb	r3, r3
 1030 0460 1340     		ands	r3, r3, r2
 1031 0462 DBB2     		uxtb	r3, r3
 1032 0464 DBB2     		uxtb	r3, r3
 1033 0466 1846     		mov	r0, r3
 1034 0468 FFF7FEFF 		bl	Tabs_1_Write
 499:main.c        ****                     }
 500:main.c        ****                     else
 501:main.c        ****                     {
 502:main.c        ****                     Tabs_1_Write(Tabs_1_Read() | (0x01 << midiMsg[USB_EVENT_BYTE1]));    
 503:main.c        ****                     }
 504:main.c        ****                     break;
 1035              		.loc 1 504 0
 1036 046c 9EE0     		b	.L60
 1037              	.L66:
 502:main.c        ****                     }
 1038              		.loc 1 502 0
 1039 046e FFF7FEFF 		bl	Tabs_1_Read
 1040 0472 0346     		mov	r3, r0
 1041 0474 DAB2     		uxtb	r2, r3
 1042 0476 3B68     		ldr	r3, [r7]
 1043 0478 0133     		adds	r3, r3, #1
 1044 047a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1045 047c 1946     		mov	r1, r3
 1046 047e 0123     		movs	r3, #1
 1047 0480 8B40     		lsls	r3, r3, r1
 1048 0482 DBB2     		uxtb	r3, r3
 1049 0484 1343     		orrs	r3, r3, r2
 1050 0486 DBB2     		uxtb	r3, r3
 1051 0488 DBB2     		uxtb	r3, r3
 1052 048a 1846     		mov	r0, r3
 1053 048c FFF7FEFF 		bl	Tabs_1_Write
 1054              		.loc 1 504 0
 1055 0490 8CE0     		b	.L60
 1056              	.L63:
 505:main.c        ****                 
 506:main.c        ****                 case 1:
 507:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1057              		.loc 1 507 0
 1058 0492 3B68     		ldr	r3, [r7]
 1059 0494 0233     		adds	r3, r3, #2
 1060 0496 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1061 0498 3E2B     		cmp	r3, #62
 1062 049a 15D8     		bhi	.L68
 508:main.c        ****                     {
 509:main.c        ****                     Tabs_2_Write(Tabs_2_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-8)));
 1063              		.loc 1 509 0
 1064 049c FFF7FEFF 		bl	Tabs_2_Read
 1065 04a0 0346     		mov	r3, r0
 1066 04a2 D9B2     		uxtb	r1, r3
 1067 04a4 3B68     		ldr	r3, [r7]
 1068 04a6 0133     		adds	r3, r3, #1
 1069 04a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1070 04aa 083B     		subs	r3, r3, #8
 1071 04ac 0122     		movs	r2, #1
 1072 04ae 02FA03F3 		lsl	r3, r2, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 29


 1073 04b2 DBB2     		uxtb	r3, r3
 1074 04b4 DB43     		mvns	r3, r3
 1075 04b6 DBB2     		uxtb	r3, r3
 1076 04b8 0A46     		mov	r2, r1
 1077 04ba 1340     		ands	r3, r3, r2
 1078 04bc DBB2     		uxtb	r3, r3
 1079 04be DBB2     		uxtb	r3, r3
 1080 04c0 1846     		mov	r0, r3
 1081 04c2 FFF7FEFF 		bl	Tabs_2_Write
 510:main.c        ****                     }
 511:main.c        ****                     else
 512:main.c        ****                     {
 513:main.c        ****                     Tabs_2_Write(Tabs_2_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-8)));    
 514:main.c        ****                     }
 515:main.c        ****                     break;
 1082              		.loc 1 515 0
 1083 04c6 71E0     		b	.L60
 1084              	.L68:
 513:main.c        ****                     }
 1085              		.loc 1 513 0
 1086 04c8 FFF7FEFF 		bl	Tabs_2_Read
 1087 04cc 0346     		mov	r3, r0
 1088 04ce D9B2     		uxtb	r1, r3
 1089 04d0 3B68     		ldr	r3, [r7]
 1090 04d2 0133     		adds	r3, r3, #1
 1091 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1092 04d6 083B     		subs	r3, r3, #8
 1093 04d8 0122     		movs	r2, #1
 1094 04da 02FA03F3 		lsl	r3, r2, r3
 1095 04de DBB2     		uxtb	r3, r3
 1096 04e0 0A46     		mov	r2, r1
 1097 04e2 1343     		orrs	r3, r3, r2
 1098 04e4 DBB2     		uxtb	r3, r3
 1099 04e6 DBB2     		uxtb	r3, r3
 1100 04e8 1846     		mov	r0, r3
 1101 04ea FFF7FEFF 		bl	Tabs_2_Write
 1102              		.loc 1 515 0
 1103 04ee 5DE0     		b	.L60
 1104              	.L64:
 516:main.c        ****                 
 517:main.c        ****                 case 2:
 518:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1105              		.loc 1 518 0
 1106 04f0 3B68     		ldr	r3, [r7]
 1107 04f2 0233     		adds	r3, r3, #2
 1108 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1109 04f6 3E2B     		cmp	r3, #62
 1110 04f8 15D8     		bhi	.L70
 519:main.c        ****                     {
 520:main.c        ****                     Tabs_3_Write(Tabs_3_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-16)));
 1111              		.loc 1 520 0
 1112 04fa FFF7FEFF 		bl	Tabs_3_Read
 1113 04fe 0346     		mov	r3, r0
 1114 0500 D9B2     		uxtb	r1, r3
 1115 0502 3B68     		ldr	r3, [r7]
 1116 0504 0133     		adds	r3, r3, #1
 1117 0506 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 30


 1118 0508 103B     		subs	r3, r3, #16
 1119 050a 0122     		movs	r2, #1
 1120 050c 02FA03F3 		lsl	r3, r2, r3
 1121 0510 DBB2     		uxtb	r3, r3
 1122 0512 DB43     		mvns	r3, r3
 1123 0514 DBB2     		uxtb	r3, r3
 1124 0516 0A46     		mov	r2, r1
 1125 0518 1340     		ands	r3, r3, r2
 1126 051a DBB2     		uxtb	r3, r3
 1127 051c DBB2     		uxtb	r3, r3
 1128 051e 1846     		mov	r0, r3
 1129 0520 FFF7FEFF 		bl	Tabs_3_Write
 521:main.c        ****                     }
 522:main.c        ****                     else
 523:main.c        ****                     {
 524:main.c        ****                     Tabs_3_Write(Tabs_3_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-16)));    
 525:main.c        ****                     }
 526:main.c        ****                     break;
 1130              		.loc 1 526 0
 1131 0524 42E0     		b	.L60
 1132              	.L70:
 524:main.c        ****                     }
 1133              		.loc 1 524 0
 1134 0526 FFF7FEFF 		bl	Tabs_3_Read
 1135 052a 0346     		mov	r3, r0
 1136 052c D9B2     		uxtb	r1, r3
 1137 052e 3B68     		ldr	r3, [r7]
 1138 0530 0133     		adds	r3, r3, #1
 1139 0532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1140 0534 103B     		subs	r3, r3, #16
 1141 0536 0122     		movs	r2, #1
 1142 0538 02FA03F3 		lsl	r3, r2, r3
 1143 053c DBB2     		uxtb	r3, r3
 1144 053e 0A46     		mov	r2, r1
 1145 0540 1343     		orrs	r3, r3, r2
 1146 0542 DBB2     		uxtb	r3, r3
 1147 0544 DBB2     		uxtb	r3, r3
 1148 0546 1846     		mov	r0, r3
 1149 0548 FFF7FEFF 		bl	Tabs_3_Write
 1150              		.loc 1 526 0
 1151 054c 2EE0     		b	.L60
 1152              	.L65:
 527:main.c        ****                 
 528:main.c        ****                 case 3:
 529:main.c        ****                     if (midiMsg[USB_EVENT_BYTE2] < 63)
 1153              		.loc 1 529 0
 1154 054e 3B68     		ldr	r3, [r7]
 1155 0550 0233     		adds	r3, r3, #2
 1156 0552 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1157 0554 3E2B     		cmp	r3, #62
 1158 0556 15D8     		bhi	.L72
 530:main.c        ****                     {
 531:main.c        ****                     Tabs_4_Write(Tabs_4_Read() & ~(0x01 << (midiMsg[USB_EVENT_BYTE1]-24)));
 1159              		.loc 1 531 0
 1160 0558 FFF7FEFF 		bl	Tabs_4_Read
 1161 055c 0346     		mov	r3, r0
 1162 055e D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 31


 1163 0560 3B68     		ldr	r3, [r7]
 1164 0562 0133     		adds	r3, r3, #1
 1165 0564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1166 0566 183B     		subs	r3, r3, #24
 1167 0568 0122     		movs	r2, #1
 1168 056a 02FA03F3 		lsl	r3, r2, r3
 1169 056e DBB2     		uxtb	r3, r3
 1170 0570 DB43     		mvns	r3, r3
 1171 0572 DBB2     		uxtb	r3, r3
 1172 0574 0A46     		mov	r2, r1
 1173 0576 1340     		ands	r3, r3, r2
 1174 0578 DBB2     		uxtb	r3, r3
 1175 057a DBB2     		uxtb	r3, r3
 1176 057c 1846     		mov	r0, r3
 1177 057e FFF7FEFF 		bl	Tabs_4_Write
 532:main.c        ****                     }
 533:main.c        ****                     else
 534:main.c        ****                     {
 535:main.c        ****                     Tabs_4_Write(Tabs_4_Read() | (0x01 << (midiMsg[USB_EVENT_BYTE1]-24)));    
 536:main.c        ****                     }
 537:main.c        ****                     break;
 1178              		.loc 1 537 0
 1179 0582 12E0     		b	.L75
 1180              	.L72:
 535:main.c        ****                     }
 1181              		.loc 1 535 0
 1182 0584 FFF7FEFF 		bl	Tabs_4_Read
 1183 0588 0346     		mov	r3, r0
 1184 058a D9B2     		uxtb	r1, r3
 1185 058c 3B68     		ldr	r3, [r7]
 1186 058e 0133     		adds	r3, r3, #1
 1187 0590 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1188 0592 183B     		subs	r3, r3, #24
 1189 0594 0122     		movs	r2, #1
 1190 0596 02FA03F3 		lsl	r3, r2, r3
 1191 059a DBB2     		uxtb	r3, r3
 1192 059c 0A46     		mov	r2, r1
 1193 059e 1343     		orrs	r3, r3, r2
 1194 05a0 DBB2     		uxtb	r3, r3
 1195 05a2 DBB2     		uxtb	r3, r3
 1196 05a4 1846     		mov	r0, r3
 1197 05a6 FFF7FEFF 		bl	Tabs_4_Write
 1198              	.L75:
 1199              		.loc 1 537 0
 1200 05aa 00BF     		nop
 1201              	.L60:
 1202              	.L74:
 538:main.c        ****              
 539:main.c        ****             }
 540:main.c        ****             break;        
 1203              		.loc 1 540 0
 1204 05ac 00BF     		nop
 1205              	.L30:
 541:main.c        ****     }
 542:main.c        ****     
 543:main.c        ****     
 544:main.c        ****     inqFlagsOld = USB_MIDI1_InqFlags;
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 32


 1206              		.loc 1 544 0
 1207 05ae 044B     		ldr	r3, .L78
 1208 05b0 1B78     		ldrb	r3, [r3]
 1209 05b2 DAB2     		uxtb	r2, r3
 1210 05b4 034B     		ldr	r3, .L78+4
 1211 05b6 1A70     		strb	r2, [r3]
 545:main.c        ****     cable = cable;
 546:main.c        **** }    
 1212              		.loc 1 546 0
 1213 05b8 0837     		adds	r7, r7, #8
 1214              		.cfi_def_cfa_offset 8
 1215 05ba BD46     		mov	sp, r7
 1216              		.cfi_def_cfa_register 13
 1217              		@ sp needed
 1218 05bc 80BD     		pop	{r7, pc}
 1219              	.L79:
 1220 05be 00BF     		.align	2
 1221              	.L78:
 1222 05c0 00000000 		.word	USB_MIDI1_InqFlags
 1223 05c4 00000000 		.word	inqFlagsOld
 1224              		.cfi_endproc
 1225              	.LFE65:
 1226              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 1227              		.section	.text.USB_MIDI1_ProcessUsbOut_EntryCallback,"ax",%progbits
 1228              		.align	2
 1229              		.global	USB_MIDI1_ProcessUsbOut_EntryCallback
 1230              		.thumb
 1231              		.thumb_func
 1232              		.type	USB_MIDI1_ProcessUsbOut_EntryCallback, %function
 1233              	USB_MIDI1_ProcessUsbOut_EntryCallback:
 1234              	.LFB66:
 547:main.c        **** 
 548:main.c        **** 
 549:main.c        **** /*******************************************************************************
 550:main.c        **** * Function Name: USB_MIDI1_ProcessUsbOut_EntryCallback
 551:main.c        **** ********************************************************************************
 552:main.c        **** * Summary:  Turn the LED_OutA on at the beginning of the function
 553:main.c        **** * USB_MIDI1_ProcessUsbOut() when data comes to be put in the UART1 out
 554:main.c        **** * buffer.
 555:main.c        **** * 
 556:main.c        **** *******************************************************************************/
 557:main.c        **** void USB_MIDI1_ProcessUsbOut_EntryCallback(void)
 558:main.c        **** {
 1235              		.loc 1 558 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 0
 1238              		@ frame_needed = 1, uses_anonymous_args = 0
 1239              		@ link register save eliminated.
 1240 0000 80B4     		push	{r7}
 1241              		.cfi_def_cfa_offset 4
 1242              		.cfi_offset 7, -4
 1243 0002 00AF     		add	r7, sp, #0
 1244              		.cfi_def_cfa_register 7
 559:main.c        ****   //  LED_OutA_Write(1);
 560:main.c        **** }
 1245              		.loc 1 560 0
 1246 0004 BD46     		mov	sp, r7
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 33


 1247              		.cfi_def_cfa_register 13
 1248              		@ sp needed
 1249 0006 5DF8047B 		ldr	r7, [sp], #4
 1250              		.cfi_restore 7
 1251              		.cfi_def_cfa_offset 0
 1252 000a 7047     		bx	lr
 1253              		.cfi_endproc
 1254              	.LFE66:
 1255              		.size	USB_MIDI1_ProcessUsbOut_EntryCallback, .-USB_MIDI1_ProcessUsbOut_EntryCallback
 1256              		.section	.text.USB_MIDI1_ProcessUsbOut_ExitCallback,"ax",%progbits
 1257              		.align	2
 1258              		.global	USB_MIDI1_ProcessUsbOut_ExitCallback
 1259              		.thumb
 1260              		.thumb_func
 1261              		.type	USB_MIDI1_ProcessUsbOut_ExitCallback, %function
 1262              	USB_MIDI1_ProcessUsbOut_ExitCallback:
 1263              	.LFB67:
 561:main.c        **** 
 562:main.c        **** 
 563:main.c        **** /*******************************************************************************
 564:main.c        **** * Function Name: USB_MIDI1_ProcessUsbOut_ExitCallback
 565:main.c        **** ********************************************************************************
 566:main.c        **** * Summary:  Turn the LED_OutA off at the end of the function  
 567:main.c        **** * USB_MIDI1_ProcessUsbOut() when data is put in the UART1 out-buffer.
 568:main.c        **** * 
 569:main.c        **** *******************************************************************************/
 570:main.c        **** void USB_MIDI1_ProcessUsbOut_ExitCallback(void)
 571:main.c        **** {
 1264              		.loc 1 571 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 1, uses_anonymous_args = 0
 1268              		@ link register save eliminated.
 1269 0000 80B4     		push	{r7}
 1270              		.cfi_def_cfa_offset 4
 1271              		.cfi_offset 7, -4
 1272 0002 00AF     		add	r7, sp, #0
 1273              		.cfi_def_cfa_register 7
 572:main.c        ****   //  LED_OutA_Write(0);
 573:main.c        **** }
 1274              		.loc 1 573 0
 1275 0004 BD46     		mov	sp, r7
 1276              		.cfi_def_cfa_register 13
 1277              		@ sp needed
 1278 0006 5DF8047B 		ldr	r7, [sp], #4
 1279              		.cfi_restore 7
 1280              		.cfi_def_cfa_offset 0
 1281 000a 7047     		bx	lr
 1282              		.cfi_endproc
 1283              	.LFE67:
 1284              		.size	USB_MIDI1_ProcessUsbOut_ExitCallback, .-USB_MIDI1_ProcessUsbOut_ExitCallback
 1285              		.section	.text.USB_MIDI2_ProcessUsbOut_EntryCallback,"ax",%progbits
 1286              		.align	2
 1287              		.global	USB_MIDI2_ProcessUsbOut_EntryCallback
 1288              		.thumb
 1289              		.thumb_func
 1290              		.type	USB_MIDI2_ProcessUsbOut_EntryCallback, %function
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 34


 1291              	USB_MIDI2_ProcessUsbOut_EntryCallback:
 1292              	.LFB68:
 574:main.c        **** 
 575:main.c        **** 
 576:main.c        **** /*******************************************************************************
 577:main.c        **** * Function Name: USB_MIDI2_ProcessUsbOut_EntryCallback
 578:main.c        **** ********************************************************************************
 579:main.c        **** * Summary:  Turn the LED_OutB on at the beginning of the function  
 580:main.c        **** * USB_MIDI2_ProcessUsbOut() when data comes to be put in the UART2 out- 
 581:main.c        **** * buffer  
 582:main.c        **** * 
 583:main.c        **** *******************************************************************************/
 584:main.c        **** void USB_MIDI2_ProcessUsbOut_EntryCallback(void)
 585:main.c        **** {
 1293              		.loc 1 585 0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 1, uses_anonymous_args = 0
 1297 0000 80B5     		push	{r7, lr}
 1298              		.cfi_def_cfa_offset 8
 1299              		.cfi_offset 7, -8
 1300              		.cfi_offset 14, -4
 1301 0002 00AF     		add	r7, sp, #0
 1302              		.cfi_def_cfa_register 7
 586:main.c        ****     LED_OutB_Write(1);
 1303              		.loc 1 586 0
 1304 0004 0120     		movs	r0, #1
 1305 0006 FFF7FEFF 		bl	LED_OutB_Write
 587:main.c        **** }
 1306              		.loc 1 587 0
 1307 000a 80BD     		pop	{r7, pc}
 1308              		.cfi_endproc
 1309              	.LFE68:
 1310              		.size	USB_MIDI2_ProcessUsbOut_EntryCallback, .-USB_MIDI2_ProcessUsbOut_EntryCallback
 1311              		.section	.text.USB_MIDI2_ProcessUsbOut_ExitCallback,"ax",%progbits
 1312              		.align	2
 1313              		.global	USB_MIDI2_ProcessUsbOut_ExitCallback
 1314              		.thumb
 1315              		.thumb_func
 1316              		.type	USB_MIDI2_ProcessUsbOut_ExitCallback, %function
 1317              	USB_MIDI2_ProcessUsbOut_ExitCallback:
 1318              	.LFB69:
 588:main.c        **** 
 589:main.c        **** 
 590:main.c        **** /*******************************************************************************
 591:main.c        **** * Function Name: USB_MIDI2_ProcessUsbOut_ExitCallback
 592:main.c        **** ********************************************************************************
 593:main.c        **** * Summary:  Turn the LED_OutB off at the end of the function  
 594:main.c        **** * USB_MIDI2_ProcessUsbOut() when data is put in the UART2 out-buffer.
 595:main.c        **** * 
 596:main.c        **** *******************************************************************************/
 597:main.c        **** void USB_MIDI2_ProcessUsbOut_ExitCallback(void)
 598:main.c        **** {
 1319              		.loc 1 598 0
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 0
 1322              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 35


 1323 0000 80B5     		push	{r7, lr}
 1324              		.cfi_def_cfa_offset 8
 1325              		.cfi_offset 7, -8
 1326              		.cfi_offset 14, -4
 1327 0002 00AF     		add	r7, sp, #0
 1328              		.cfi_def_cfa_register 7
 599:main.c        ****     LED_OutB_Write(0);
 1329              		.loc 1 599 0
 1330 0004 0020     		movs	r0, #0
 1331 0006 FFF7FEFF 		bl	LED_OutB_Write
 600:main.c        **** }
 1332              		.loc 1 600 0
 1333 000a 80BD     		pop	{r7, pc}
 1334              		.cfi_endproc
 1335              	.LFE69:
 1336              		.size	USB_MIDI2_ProcessUsbOut_ExitCallback, .-USB_MIDI2_ProcessUsbOut_ExitCallback
 1337              		.section	.text.MIDI1_UART_RXISR_EntryCallback,"ax",%progbits
 1338              		.align	2
 1339              		.global	MIDI1_UART_RXISR_EntryCallback
 1340              		.thumb
 1341              		.thumb_func
 1342              		.type	MIDI1_UART_RXISR_EntryCallback, %function
 1343              	MIDI1_UART_RXISR_EntryCallback:
 1344              	.LFB70:
 601:main.c        **** 
 602:main.c        **** 
 603:main.c        **** /*******************************************************************************
 604:main.c        **** * Function Name: MIDI1_UART_RXISR_EntryCallback
 605:main.c        **** ********************************************************************************
 606:main.c        **** * Summary:  Turn the LED_InA on at the beginning of the MIDI1_UART_RXISR ISR  
 607:main.c        **** * when data comes to UART1 to be put in the USBFS_MIDI IN endpoint
 608:main.c        **** * buffer.
 609:main.c        **** *
 610:main.c        **** *******************************************************************************/
 611:main.c        **** void MIDI1_UART_RXISR_EntryCallback(void)
 612:main.c        **** {
 1345              		.loc 1 612 0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 0
 1348              		@ frame_needed = 1, uses_anonymous_args = 0
 1349 0000 80B5     		push	{r7, lr}
 1350              		.cfi_def_cfa_offset 8
 1351              		.cfi_offset 7, -8
 1352              		.cfi_offset 14, -4
 1353 0002 00AF     		add	r7, sp, #0
 1354              		.cfi_def_cfa_register 7
 613:main.c        ****     /* These LEDs indicate MIDI input activity */
 614:main.c        ****     LED_InA_Write(1);
 1355              		.loc 1 614 0
 1356 0004 0120     		movs	r0, #1
 1357 0006 FFF7FEFF 		bl	LED_InA_Write
 615:main.c        **** }
 1358              		.loc 1 615 0
 1359 000a 80BD     		pop	{r7, pc}
 1360              		.cfi_endproc
 1361              	.LFE70:
 1362              		.size	MIDI1_UART_RXISR_EntryCallback, .-MIDI1_UART_RXISR_EntryCallback
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 36


 1363              		.section	.text.MIDI1_UART_RXISR_ExitCallback,"ax",%progbits
 1364              		.align	2
 1365              		.global	MIDI1_UART_RXISR_ExitCallback
 1366              		.thumb
 1367              		.thumb_func
 1368              		.type	MIDI1_UART_RXISR_ExitCallback, %function
 1369              	MIDI1_UART_RXISR_ExitCallback:
 1370              	.LFB71:
 616:main.c        **** 
 617:main.c        **** 
 618:main.c        **** /*******************************************************************************
 619:main.c        **** * Function Name: MIDI1_UART_RXISR_ExitCallback
 620:main.c        **** ********************************************************************************
 621:main.c        **** * Summary:  Turn the LED_InA off at the end of the MIDI1_UART_RXISR ISR  
 622:main.c        **** * when data is put in the USBFS_MIDI IN endpoint buffer.
 623:main.c        **** *
 624:main.c        **** *******************************************************************************/
 625:main.c        **** void MIDI1_UART_RXISR_ExitCallback(void)
 626:main.c        **** {
 1371              		.loc 1 626 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 1, uses_anonymous_args = 0
 1375 0000 80B5     		push	{r7, lr}
 1376              		.cfi_def_cfa_offset 8
 1377              		.cfi_offset 7, -8
 1378              		.cfi_offset 14, -4
 1379 0002 00AF     		add	r7, sp, #0
 1380              		.cfi_def_cfa_register 7
 627:main.c        ****     #if (USB_EP_MANAGEMENT_DMA_AUTO) 
 628:main.c        ****         USB_MIDI_IN_Service();
 629:main.c        ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 630:main.c        ****     
 631:main.c        ****     LED_InA_Write(0);
 1381              		.loc 1 631 0
 1382 0004 0020     		movs	r0, #0
 1383 0006 FFF7FEFF 		bl	LED_InA_Write
 632:main.c        **** }
 1384              		.loc 1 632 0
 1385 000a 80BD     		pop	{r7, pc}
 1386              		.cfi_endproc
 1387              	.LFE71:
 1388              		.size	MIDI1_UART_RXISR_ExitCallback, .-MIDI1_UART_RXISR_ExitCallback
 1389              		.section	.text.MIDI2_UART_RXISR_EntryCallback,"ax",%progbits
 1390              		.align	2
 1391              		.global	MIDI2_UART_RXISR_EntryCallback
 1392              		.thumb
 1393              		.thumb_func
 1394              		.type	MIDI2_UART_RXISR_EntryCallback, %function
 1395              	MIDI2_UART_RXISR_EntryCallback:
 1396              	.LFB72:
 633:main.c        **** 
 634:main.c        **** 
 635:main.c        **** /*******************************************************************************
 636:main.c        **** * Function Name: MIDI2_UART_RXISR_EntryCallback
 637:main.c        **** ********************************************************************************
 638:main.c        **** * Summary:  Turn the LED_InB on at the beginning of the MIDI2_UART_RXISR ISR  
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 37


 639:main.c        **** * when data comes to UART2 to be put in the USBFS_MIDI IN endpoint  
 640:main.c        **** * buffer.
 641:main.c        **** *
 642:main.c        **** *******************************************************************************/
 643:main.c        **** void MIDI2_UART_RXISR_EntryCallback(void)
 644:main.c        **** {
 1397              		.loc 1 644 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 0
 1400              		@ frame_needed = 1, uses_anonymous_args = 0
 1401 0000 80B5     		push	{r7, lr}
 1402              		.cfi_def_cfa_offset 8
 1403              		.cfi_offset 7, -8
 1404              		.cfi_offset 14, -4
 1405 0002 00AF     		add	r7, sp, #0
 1406              		.cfi_def_cfa_register 7
 645:main.c        ****     /* These LEDs indicate MIDI input activity */
 646:main.c        ****     LED_InB_Write(1);
 1407              		.loc 1 646 0
 1408 0004 0120     		movs	r0, #1
 1409 0006 FFF7FEFF 		bl	LED_InB_Write
 647:main.c        **** }
 1410              		.loc 1 647 0
 1411 000a 80BD     		pop	{r7, pc}
 1412              		.cfi_endproc
 1413              	.LFE72:
 1414              		.size	MIDI2_UART_RXISR_EntryCallback, .-MIDI2_UART_RXISR_EntryCallback
 1415              		.section	.text.MIDI2_UART_RXISR_ExitCallback,"ax",%progbits
 1416              		.align	2
 1417              		.global	MIDI2_UART_RXISR_ExitCallback
 1418              		.thumb
 1419              		.thumb_func
 1420              		.type	MIDI2_UART_RXISR_ExitCallback, %function
 1421              	MIDI2_UART_RXISR_ExitCallback:
 1422              	.LFB73:
 648:main.c        **** 
 649:main.c        **** 
 650:main.c        **** /*******************************************************************************
 651:main.c        **** * Function Name: MIDI2_UART_RXISR_ExitCallback
 652:main.c        **** ********************************************************************************
 653:main.c        **** * Summary:  Turn the LED_InB off at the end of the MIDI2_UART_RXISR ISR  
 654:main.c        **** * when data is put in the USBFS_MIDI IN endpoint buffer
 655:main.c        **** *
 656:main.c        **** *******************************************************************************/
 657:main.c        **** void MIDI2_UART_RXISR_ExitCallback(void)
 658:main.c        **** {
 1423              		.loc 1 658 0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 1, uses_anonymous_args = 0
 1427 0000 80B5     		push	{r7, lr}
 1428              		.cfi_def_cfa_offset 8
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 1431 0002 00AF     		add	r7, sp, #0
 1432              		.cfi_def_cfa_register 7
 659:main.c        ****     #if (USB_EP_MANAGEMENT_DMA_AUTO) 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 38


 660:main.c        ****         USB_MIDI_IN_Service();
 661:main.c        ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 662:main.c        ****     
 663:main.c        ****     LED_InB_Write(0);
 1433              		.loc 1 663 0
 1434 0004 0020     		movs	r0, #0
 1435 0006 FFF7FEFF 		bl	LED_InB_Write
 664:main.c        **** }
 1436              		.loc 1 664 0
 1437 000a 80BD     		pop	{r7, pc}
 1438              		.cfi_endproc
 1439              	.LFE73:
 1440              		.size	MIDI2_UART_RXISR_ExitCallback, .-MIDI2_UART_RXISR_ExitCallback
 1441              		.text
 1442              	.Letext0:
 1443              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1444              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1445              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1446              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 1447              		.section	.debug_info,"",%progbits
 1448              	.Ldebug_info0:
 1449 0000 61020000 		.4byte	0x261
 1450 0004 0400     		.2byte	0x4
 1451 0006 00000000 		.4byte	.Ldebug_abbrev0
 1452 000a 04       		.byte	0x4
 1453 000b 01       		.uleb128 0x1
 1454 000c 53000000 		.4byte	.LASF38
 1455 0010 01       		.byte	0x1
 1456 0011 C6020000 		.4byte	.LASF39
 1457 0015 E1000000 		.4byte	.LASF40
 1458 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1459 001d 00000000 		.4byte	0
 1460 0021 00000000 		.4byte	.Ldebug_line0
 1461 0025 02       		.uleb128 0x2
 1462 0026 01       		.byte	0x1
 1463 0027 06       		.byte	0x6
 1464 0028 0E030000 		.4byte	.LASF0
 1465 002c 02       		.uleb128 0x2
 1466 002d 01       		.byte	0x1
 1467 002e 08       		.byte	0x8
 1468 002f 65010000 		.4byte	.LASF1
 1469 0033 02       		.uleb128 0x2
 1470 0034 02       		.byte	0x2
 1471 0035 05       		.byte	0x5
 1472 0036 F5020000 		.4byte	.LASF2
 1473 003a 02       		.uleb128 0x2
 1474 003b 02       		.byte	0x2
 1475 003c 07       		.byte	0x7
 1476 003d 85010000 		.4byte	.LASF3
 1477 0041 03       		.uleb128 0x3
 1478 0042 2A000000 		.4byte	.LASF9
 1479 0046 02       		.byte	0x2
 1480 0047 3F       		.byte	0x3f
 1481 0048 4C000000 		.4byte	0x4c
 1482 004c 02       		.uleb128 0x2
 1483 004d 04       		.byte	0x4
 1484 004e 05       		.byte	0x5
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 39


 1485 004f 05030000 		.4byte	.LASF4
 1486 0053 02       		.uleb128 0x2
 1487 0054 04       		.byte	0x4
 1488 0055 07       		.byte	0x7
 1489 0056 73010000 		.4byte	.LASF5
 1490 005a 02       		.uleb128 0x2
 1491 005b 08       		.byte	0x8
 1492 005c 05       		.byte	0x5
 1493 005d 57010000 		.4byte	.LASF6
 1494 0061 02       		.uleb128 0x2
 1495 0062 08       		.byte	0x8
 1496 0063 07       		.byte	0x7
 1497 0064 26020000 		.4byte	.LASF7
 1498 0068 04       		.uleb128 0x4
 1499 0069 04       		.byte	0x4
 1500 006a 05       		.byte	0x5
 1501 006b 696E7400 		.ascii	"int\000"
 1502 006f 02       		.uleb128 0x2
 1503 0070 04       		.byte	0x4
 1504 0071 07       		.byte	0x7
 1505 0072 19020000 		.4byte	.LASF8
 1506 0076 03       		.uleb128 0x3
 1507 0077 8E020000 		.4byte	.LASF10
 1508 007b 03       		.byte	0x3
 1509 007c 2C       		.byte	0x2c
 1510 007d 41000000 		.4byte	0x41
 1511 0081 05       		.uleb128 0x5
 1512 0082 FF020000 		.4byte	.LASF11
 1513 0086 04       		.byte	0x4
 1514 0087 9201     		.2byte	0x192
 1515 0089 2C000000 		.4byte	0x2c
 1516 008d 02       		.uleb128 0x2
 1517 008e 04       		.byte	0x4
 1518 008f 04       		.byte	0x4
 1519 0090 51010000 		.4byte	.LASF12
 1520 0094 02       		.uleb128 0x2
 1521 0095 08       		.byte	0x8
 1522 0096 04       		.byte	0x4
 1523 0097 AB010000 		.4byte	.LASF13
 1524 009b 02       		.uleb128 0x2
 1525 009c 01       		.byte	0x1
 1526 009d 08       		.byte	0x8
 1527 009e CD020000 		.4byte	.LASF14
 1528 00a2 06       		.uleb128 0x6
 1529 00a3 81000000 		.4byte	0x81
 1530 00a7 02       		.uleb128 0x2
 1531 00a8 04       		.byte	0x4
 1532 00a9 07       		.byte	0x7
 1533 00aa 96020000 		.4byte	.LASF15
 1534 00ae 07       		.uleb128 0x7
 1535 00af 81000000 		.4byte	0x81
 1536 00b3 BE000000 		.4byte	0xbe
 1537 00b7 08       		.uleb128 0x8
 1538 00b8 A7000000 		.4byte	0xa7
 1539 00bc 03       		.byte	0x3
 1540 00bd 00       		.byte	0
 1541 00be 09       		.uleb128 0x9
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 40


 1542 00bf EA010000 		.4byte	.LASF20
 1543 00c3 01       		.byte	0x1
 1544 00c4 5B       		.byte	0x5b
 1545 00c5 00000000 		.4byte	.LFB63
 1546 00c9 30000000 		.4byte	.LFE63-.LFB63
 1547 00cd 01       		.uleb128 0x1
 1548 00ce 9C       		.byte	0x9c
 1549 00cf 0A       		.uleb128 0xa
 1550 00d0 B2010000 		.4byte	.LASF16
 1551 00d4 01       		.byte	0x1
 1552 00d5 72       		.byte	0x72
 1553 00d6 68000000 		.4byte	0x68
 1554 00da 00000000 		.4byte	.LFB64
 1555 00de 38020000 		.4byte	.LFE64-.LFB64
 1556 00e2 01       		.uleb128 0x1
 1557 00e3 9C       		.byte	0x9c
 1558 00e4 F7000000 		.4byte	0xf7
 1559 00e8 0B       		.uleb128 0xb
 1560 00e9 ED020000 		.4byte	.LASF19
 1561 00ed 01       		.byte	0x1
 1562 00ee 74       		.byte	0x74
 1563 00ef AE000000 		.4byte	0xae
 1564 00f3 02       		.uleb128 0x2
 1565 00f4 91       		.byte	0x91
 1566 00f5 74       		.sleb128 -12
 1567 00f6 00       		.byte	0
 1568 00f7 0C       		.uleb128 0xc
 1569 00f8 D2020000 		.4byte	.LASF17
 1570 00fc 01       		.byte	0x1
 1571 00fd 5401     		.2byte	0x154
 1572 00ff 00000000 		.4byte	.LFB65
 1573 0103 C8050000 		.4byte	.LFE65-.LFB65
 1574 0107 01       		.uleb128 0x1
 1575 0108 9C       		.byte	0x9c
 1576 0109 2C010000 		.4byte	0x12c
 1577 010d 0D       		.uleb128 0xd
 1578 010e 98010000 		.4byte	.LASF18
 1579 0112 01       		.byte	0x1
 1580 0113 5401     		.2byte	0x154
 1581 0115 81000000 		.4byte	0x81
 1582 0119 02       		.uleb128 0x2
 1583 011a 91       		.byte	0x91
 1584 011b 77       		.sleb128 -9
 1585 011c 0D       		.uleb128 0xd
 1586 011d ED020000 		.4byte	.LASF19
 1587 0121 01       		.byte	0x1
 1588 0122 5401     		.2byte	0x154
 1589 0124 2C010000 		.4byte	0x12c
 1590 0128 02       		.uleb128 0x2
 1591 0129 91       		.byte	0x91
 1592 012a 70       		.sleb128 -16
 1593 012b 00       		.byte	0
 1594 012c 0E       		.uleb128 0xe
 1595 012d 04       		.byte	0x4
 1596 012e 81000000 		.4byte	0x81
 1597 0132 0F       		.uleb128 0xf
 1598 0133 F3010000 		.4byte	.LASF21
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 41


 1599 0137 01       		.byte	0x1
 1600 0138 2D02     		.2byte	0x22d
 1601 013a 00000000 		.4byte	.LFB66
 1602 013e 0C000000 		.4byte	.LFE66-.LFB66
 1603 0142 01       		.uleb128 0x1
 1604 0143 9C       		.byte	0x9c
 1605 0144 0F       		.uleb128 0xf
 1606 0145 1A030000 		.4byte	.LASF22
 1607 0149 01       		.byte	0x1
 1608 014a 3A02     		.2byte	0x23a
 1609 014c 00000000 		.4byte	.LFB67
 1610 0150 0C000000 		.4byte	.LFE67-.LFB67
 1611 0154 01       		.uleb128 0x1
 1612 0155 9C       		.byte	0x9c
 1613 0156 10       		.uleb128 0x10
 1614 0157 B7010000 		.4byte	.LASF23
 1615 015b 01       		.byte	0x1
 1616 015c 4802     		.2byte	0x248
 1617 015e 00000000 		.4byte	.LFB68
 1618 0162 0C000000 		.4byte	.LFE68-.LFB68
 1619 0166 01       		.uleb128 0x1
 1620 0167 9C       		.byte	0x9c
 1621 0168 10       		.uleb128 0x10
 1622 0169 4A020000 		.4byte	.LASF24
 1623 016d 01       		.byte	0x1
 1624 016e 5502     		.2byte	0x255
 1625 0170 00000000 		.4byte	.LFB69
 1626 0174 0C000000 		.4byte	.LFE69-.LFB69
 1627 0178 01       		.uleb128 0x1
 1628 0179 9C       		.byte	0x9c
 1629 017a 10       		.uleb128 0x10
 1630 017b 6F020000 		.4byte	.LASF25
 1631 017f 01       		.byte	0x1
 1632 0180 6302     		.2byte	0x263
 1633 0182 00000000 		.4byte	.LFB70
 1634 0186 0C000000 		.4byte	.LFE70-.LFB70
 1635 018a 01       		.uleb128 0x1
 1636 018b 9C       		.byte	0x9c
 1637 018c 10       		.uleb128 0x10
 1638 018d 20010000 		.4byte	.LASF26
 1639 0191 01       		.byte	0x1
 1640 0192 7102     		.2byte	0x271
 1641 0194 00000000 		.4byte	.LFB71
 1642 0198 0C000000 		.4byte	.LFE71-.LFB71
 1643 019c 01       		.uleb128 0x1
 1644 019d 9C       		.byte	0x9c
 1645 019e 10       		.uleb128 0x10
 1646 019f 34000000 		.4byte	.LASF27
 1647 01a3 01       		.byte	0x1
 1648 01a4 8302     		.2byte	0x283
 1649 01a6 00000000 		.4byte	.LFB72
 1650 01aa 0C000000 		.4byte	.LFE72-.LFB72
 1651 01ae 01       		.uleb128 0x1
 1652 01af 9C       		.byte	0x9c
 1653 01b0 10       		.uleb128 0x10
 1654 01b1 0C000000 		.4byte	.LASF28
 1655 01b5 01       		.byte	0x1
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 42


 1656 01b6 9102     		.2byte	0x291
 1657 01b8 00000000 		.4byte	.LFB73
 1658 01bc 0C000000 		.4byte	.LFE73-.LFB73
 1659 01c0 01       		.uleb128 0x1
 1660 01c1 9C       		.byte	0x9c
 1661 01c2 11       		.uleb128 0x11
 1662 01c3 B3020000 		.4byte	.LASF29
 1663 01c7 01       		.byte	0x1
 1664 01c8 43       		.byte	0x43
 1665 01c9 A2000000 		.4byte	0xa2
 1666 01cd 11       		.uleb128 0x11
 1667 01ce 3F030000 		.4byte	.LASF30
 1668 01d2 01       		.byte	0x1
 1669 01d3 44       		.byte	0x44
 1670 01d4 A2000000 		.4byte	0xa2
 1671 01d8 12       		.uleb128 0x12
 1672 01d9 9E010000 		.4byte	.LASF31
 1673 01dd 05       		.byte	0x5
 1674 01de 9606     		.2byte	0x696
 1675 01e0 E4010000 		.4byte	0x1e4
 1676 01e4 06       		.uleb128 0x6
 1677 01e5 76000000 		.4byte	0x76
 1678 01e9 07       		.uleb128 0x7
 1679 01ea 81000000 		.4byte	0x81
 1680 01ee F9010000 		.4byte	0x1f9
 1681 01f2 08       		.uleb128 0x8
 1682 01f3 A7000000 		.4byte	0xa7
 1683 01f7 0D       		.byte	0xd
 1684 01f8 00       		.byte	0
 1685 01f9 13       		.uleb128 0x13
 1686 01fa 9F020000 		.4byte	.LASF32
 1687 01fe 01       		.byte	0x1
 1688 01ff 35       		.byte	0x35
 1689 0200 0A020000 		.4byte	0x20a
 1690 0204 05       		.uleb128 0x5
 1691 0205 03       		.byte	0x3
 1692 0206 00000000 		.4byte	MIDI_IDENTITY_REPLY
 1693 020a 14       		.uleb128 0x14
 1694 020b E9010000 		.4byte	0x1e9
 1695 020f 13       		.uleb128 0x13
 1696 0210 3E010000 		.4byte	.LASF33
 1697 0214 01       		.byte	0x1
 1698 0215 46       		.byte	0x46
 1699 0216 A2000000 		.4byte	0xa2
 1700 021a 05       		.uleb128 0x5
 1701 021b 03       		.byte	0x3
 1702 021c 00000000 		.4byte	usbActivityCounter
 1703 0220 13       		.uleb128 0x13
 1704 0221 3D020000 		.4byte	.LASF34
 1705 0225 01       		.byte	0x1
 1706 0226 48       		.byte	0x48
 1707 0227 81000000 		.4byte	0x81
 1708 022b 05       		.uleb128 0x5
 1709 022c 03       		.byte	0x3
 1710 022d 00000000 		.4byte	csButtStates
 1711 0231 13       		.uleb128 0x13
 1712 0232 52030000 		.4byte	.LASF35
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 43


 1713 0236 01       		.byte	0x1
 1714 0237 49       		.byte	0x49
 1715 0238 81000000 		.4byte	0x81
 1716 023c 05       		.uleb128 0x5
 1717 023d 03       		.byte	0x3
 1718 023e 00000000 		.4byte	csButtStatesOld
 1719 0242 13       		.uleb128 0x13
 1720 0243 DD010000 		.4byte	.LASF36
 1721 0247 01       		.byte	0x1
 1722 0248 4A       		.byte	0x4a
 1723 0249 81000000 		.4byte	0x81
 1724 024d 05       		.uleb128 0x5
 1725 024e 03       		.byte	0x3
 1726 024f 00000000 		.4byte	csButtChange
 1727 0253 13       		.uleb128 0x13
 1728 0254 00000000 		.4byte	.LASF37
 1729 0258 01       		.byte	0x1
 1730 0259 4B       		.byte	0x4b
 1731 025a 81000000 		.4byte	0x81
 1732 025e 05       		.uleb128 0x5
 1733 025f 03       		.byte	0x3
 1734 0260 00000000 		.4byte	inqFlagsOld
 1735 0264 00       		.byte	0
 1736              		.section	.debug_abbrev,"",%progbits
 1737              	.Ldebug_abbrev0:
 1738 0000 01       		.uleb128 0x1
 1739 0001 11       		.uleb128 0x11
 1740 0002 01       		.byte	0x1
 1741 0003 25       		.uleb128 0x25
 1742 0004 0E       		.uleb128 0xe
 1743 0005 13       		.uleb128 0x13
 1744 0006 0B       		.uleb128 0xb
 1745 0007 03       		.uleb128 0x3
 1746 0008 0E       		.uleb128 0xe
 1747 0009 1B       		.uleb128 0x1b
 1748 000a 0E       		.uleb128 0xe
 1749 000b 55       		.uleb128 0x55
 1750 000c 17       		.uleb128 0x17
 1751 000d 11       		.uleb128 0x11
 1752 000e 01       		.uleb128 0x1
 1753 000f 10       		.uleb128 0x10
 1754 0010 17       		.uleb128 0x17
 1755 0011 00       		.byte	0
 1756 0012 00       		.byte	0
 1757 0013 02       		.uleb128 0x2
 1758 0014 24       		.uleb128 0x24
 1759 0015 00       		.byte	0
 1760 0016 0B       		.uleb128 0xb
 1761 0017 0B       		.uleb128 0xb
 1762 0018 3E       		.uleb128 0x3e
 1763 0019 0B       		.uleb128 0xb
 1764 001a 03       		.uleb128 0x3
 1765 001b 0E       		.uleb128 0xe
 1766 001c 00       		.byte	0
 1767 001d 00       		.byte	0
 1768 001e 03       		.uleb128 0x3
 1769 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 44


 1770 0020 00       		.byte	0
 1771 0021 03       		.uleb128 0x3
 1772 0022 0E       		.uleb128 0xe
 1773 0023 3A       		.uleb128 0x3a
 1774 0024 0B       		.uleb128 0xb
 1775 0025 3B       		.uleb128 0x3b
 1776 0026 0B       		.uleb128 0xb
 1777 0027 49       		.uleb128 0x49
 1778 0028 13       		.uleb128 0x13
 1779 0029 00       		.byte	0
 1780 002a 00       		.byte	0
 1781 002b 04       		.uleb128 0x4
 1782 002c 24       		.uleb128 0x24
 1783 002d 00       		.byte	0
 1784 002e 0B       		.uleb128 0xb
 1785 002f 0B       		.uleb128 0xb
 1786 0030 3E       		.uleb128 0x3e
 1787 0031 0B       		.uleb128 0xb
 1788 0032 03       		.uleb128 0x3
 1789 0033 08       		.uleb128 0x8
 1790 0034 00       		.byte	0
 1791 0035 00       		.byte	0
 1792 0036 05       		.uleb128 0x5
 1793 0037 16       		.uleb128 0x16
 1794 0038 00       		.byte	0
 1795 0039 03       		.uleb128 0x3
 1796 003a 0E       		.uleb128 0xe
 1797 003b 3A       		.uleb128 0x3a
 1798 003c 0B       		.uleb128 0xb
 1799 003d 3B       		.uleb128 0x3b
 1800 003e 05       		.uleb128 0x5
 1801 003f 49       		.uleb128 0x49
 1802 0040 13       		.uleb128 0x13
 1803 0041 00       		.byte	0
 1804 0042 00       		.byte	0
 1805 0043 06       		.uleb128 0x6
 1806 0044 35       		.uleb128 0x35
 1807 0045 00       		.byte	0
 1808 0046 49       		.uleb128 0x49
 1809 0047 13       		.uleb128 0x13
 1810 0048 00       		.byte	0
 1811 0049 00       		.byte	0
 1812 004a 07       		.uleb128 0x7
 1813 004b 01       		.uleb128 0x1
 1814 004c 01       		.byte	0x1
 1815 004d 49       		.uleb128 0x49
 1816 004e 13       		.uleb128 0x13
 1817 004f 01       		.uleb128 0x1
 1818 0050 13       		.uleb128 0x13
 1819 0051 00       		.byte	0
 1820 0052 00       		.byte	0
 1821 0053 08       		.uleb128 0x8
 1822 0054 21       		.uleb128 0x21
 1823 0055 00       		.byte	0
 1824 0056 49       		.uleb128 0x49
 1825 0057 13       		.uleb128 0x13
 1826 0058 2F       		.uleb128 0x2f
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 45


 1827 0059 0B       		.uleb128 0xb
 1828 005a 00       		.byte	0
 1829 005b 00       		.byte	0
 1830 005c 09       		.uleb128 0x9
 1831 005d 2E       		.uleb128 0x2e
 1832 005e 00       		.byte	0
 1833 005f 3F       		.uleb128 0x3f
 1834 0060 19       		.uleb128 0x19
 1835 0061 03       		.uleb128 0x3
 1836 0062 0E       		.uleb128 0xe
 1837 0063 3A       		.uleb128 0x3a
 1838 0064 0B       		.uleb128 0xb
 1839 0065 3B       		.uleb128 0x3b
 1840 0066 0B       		.uleb128 0xb
 1841 0067 27       		.uleb128 0x27
 1842 0068 19       		.uleb128 0x19
 1843 0069 11       		.uleb128 0x11
 1844 006a 01       		.uleb128 0x1
 1845 006b 12       		.uleb128 0x12
 1846 006c 06       		.uleb128 0x6
 1847 006d 40       		.uleb128 0x40
 1848 006e 18       		.uleb128 0x18
 1849 006f 9642     		.uleb128 0x2116
 1850 0071 19       		.uleb128 0x19
 1851 0072 00       		.byte	0
 1852 0073 00       		.byte	0
 1853 0074 0A       		.uleb128 0xa
 1854 0075 2E       		.uleb128 0x2e
 1855 0076 01       		.byte	0x1
 1856 0077 3F       		.uleb128 0x3f
 1857 0078 19       		.uleb128 0x19
 1858 0079 03       		.uleb128 0x3
 1859 007a 0E       		.uleb128 0xe
 1860 007b 3A       		.uleb128 0x3a
 1861 007c 0B       		.uleb128 0xb
 1862 007d 3B       		.uleb128 0x3b
 1863 007e 0B       		.uleb128 0xb
 1864 007f 49       		.uleb128 0x49
 1865 0080 13       		.uleb128 0x13
 1866 0081 11       		.uleb128 0x11
 1867 0082 01       		.uleb128 0x1
 1868 0083 12       		.uleb128 0x12
 1869 0084 06       		.uleb128 0x6
 1870 0085 40       		.uleb128 0x40
 1871 0086 18       		.uleb128 0x18
 1872 0087 9642     		.uleb128 0x2116
 1873 0089 19       		.uleb128 0x19
 1874 008a 01       		.uleb128 0x1
 1875 008b 13       		.uleb128 0x13
 1876 008c 00       		.byte	0
 1877 008d 00       		.byte	0
 1878 008e 0B       		.uleb128 0xb
 1879 008f 34       		.uleb128 0x34
 1880 0090 00       		.byte	0
 1881 0091 03       		.uleb128 0x3
 1882 0092 0E       		.uleb128 0xe
 1883 0093 3A       		.uleb128 0x3a
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 46


 1884 0094 0B       		.uleb128 0xb
 1885 0095 3B       		.uleb128 0x3b
 1886 0096 0B       		.uleb128 0xb
 1887 0097 49       		.uleb128 0x49
 1888 0098 13       		.uleb128 0x13
 1889 0099 02       		.uleb128 0x2
 1890 009a 18       		.uleb128 0x18
 1891 009b 00       		.byte	0
 1892 009c 00       		.byte	0
 1893 009d 0C       		.uleb128 0xc
 1894 009e 2E       		.uleb128 0x2e
 1895 009f 01       		.byte	0x1
 1896 00a0 3F       		.uleb128 0x3f
 1897 00a1 19       		.uleb128 0x19
 1898 00a2 03       		.uleb128 0x3
 1899 00a3 0E       		.uleb128 0xe
 1900 00a4 3A       		.uleb128 0x3a
 1901 00a5 0B       		.uleb128 0xb
 1902 00a6 3B       		.uleb128 0x3b
 1903 00a7 05       		.uleb128 0x5
 1904 00a8 27       		.uleb128 0x27
 1905 00a9 19       		.uleb128 0x19
 1906 00aa 11       		.uleb128 0x11
 1907 00ab 01       		.uleb128 0x1
 1908 00ac 12       		.uleb128 0x12
 1909 00ad 06       		.uleb128 0x6
 1910 00ae 40       		.uleb128 0x40
 1911 00af 18       		.uleb128 0x18
 1912 00b0 9642     		.uleb128 0x2116
 1913 00b2 19       		.uleb128 0x19
 1914 00b3 01       		.uleb128 0x1
 1915 00b4 13       		.uleb128 0x13
 1916 00b5 00       		.byte	0
 1917 00b6 00       		.byte	0
 1918 00b7 0D       		.uleb128 0xd
 1919 00b8 05       		.uleb128 0x5
 1920 00b9 00       		.byte	0
 1921 00ba 03       		.uleb128 0x3
 1922 00bb 0E       		.uleb128 0xe
 1923 00bc 3A       		.uleb128 0x3a
 1924 00bd 0B       		.uleb128 0xb
 1925 00be 3B       		.uleb128 0x3b
 1926 00bf 05       		.uleb128 0x5
 1927 00c0 49       		.uleb128 0x49
 1928 00c1 13       		.uleb128 0x13
 1929 00c2 02       		.uleb128 0x2
 1930 00c3 18       		.uleb128 0x18
 1931 00c4 00       		.byte	0
 1932 00c5 00       		.byte	0
 1933 00c6 0E       		.uleb128 0xe
 1934 00c7 0F       		.uleb128 0xf
 1935 00c8 00       		.byte	0
 1936 00c9 0B       		.uleb128 0xb
 1937 00ca 0B       		.uleb128 0xb
 1938 00cb 49       		.uleb128 0x49
 1939 00cc 13       		.uleb128 0x13
 1940 00cd 00       		.byte	0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 47


 1941 00ce 00       		.byte	0
 1942 00cf 0F       		.uleb128 0xf
 1943 00d0 2E       		.uleb128 0x2e
 1944 00d1 00       		.byte	0
 1945 00d2 3F       		.uleb128 0x3f
 1946 00d3 19       		.uleb128 0x19
 1947 00d4 03       		.uleb128 0x3
 1948 00d5 0E       		.uleb128 0xe
 1949 00d6 3A       		.uleb128 0x3a
 1950 00d7 0B       		.uleb128 0xb
 1951 00d8 3B       		.uleb128 0x3b
 1952 00d9 05       		.uleb128 0x5
 1953 00da 27       		.uleb128 0x27
 1954 00db 19       		.uleb128 0x19
 1955 00dc 11       		.uleb128 0x11
 1956 00dd 01       		.uleb128 0x1
 1957 00de 12       		.uleb128 0x12
 1958 00df 06       		.uleb128 0x6
 1959 00e0 40       		.uleb128 0x40
 1960 00e1 18       		.uleb128 0x18
 1961 00e2 9742     		.uleb128 0x2117
 1962 00e4 19       		.uleb128 0x19
 1963 00e5 00       		.byte	0
 1964 00e6 00       		.byte	0
 1965 00e7 10       		.uleb128 0x10
 1966 00e8 2E       		.uleb128 0x2e
 1967 00e9 00       		.byte	0
 1968 00ea 3F       		.uleb128 0x3f
 1969 00eb 19       		.uleb128 0x19
 1970 00ec 03       		.uleb128 0x3
 1971 00ed 0E       		.uleb128 0xe
 1972 00ee 3A       		.uleb128 0x3a
 1973 00ef 0B       		.uleb128 0xb
 1974 00f0 3B       		.uleb128 0x3b
 1975 00f1 05       		.uleb128 0x5
 1976 00f2 27       		.uleb128 0x27
 1977 00f3 19       		.uleb128 0x19
 1978 00f4 11       		.uleb128 0x11
 1979 00f5 01       		.uleb128 0x1
 1980 00f6 12       		.uleb128 0x12
 1981 00f7 06       		.uleb128 0x6
 1982 00f8 40       		.uleb128 0x40
 1983 00f9 18       		.uleb128 0x18
 1984 00fa 9642     		.uleb128 0x2116
 1985 00fc 19       		.uleb128 0x19
 1986 00fd 00       		.byte	0
 1987 00fe 00       		.byte	0
 1988 00ff 11       		.uleb128 0x11
 1989 0100 34       		.uleb128 0x34
 1990 0101 00       		.byte	0
 1991 0102 03       		.uleb128 0x3
 1992 0103 0E       		.uleb128 0xe
 1993 0104 3A       		.uleb128 0x3a
 1994 0105 0B       		.uleb128 0xb
 1995 0106 3B       		.uleb128 0x3b
 1996 0107 0B       		.uleb128 0xb
 1997 0108 49       		.uleb128 0x49
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 48


 1998 0109 13       		.uleb128 0x13
 1999 010a 3F       		.uleb128 0x3f
 2000 010b 19       		.uleb128 0x19
 2001 010c 3C       		.uleb128 0x3c
 2002 010d 19       		.uleb128 0x19
 2003 010e 00       		.byte	0
 2004 010f 00       		.byte	0
 2005 0110 12       		.uleb128 0x12
 2006 0111 34       		.uleb128 0x34
 2007 0112 00       		.byte	0
 2008 0113 03       		.uleb128 0x3
 2009 0114 0E       		.uleb128 0xe
 2010 0115 3A       		.uleb128 0x3a
 2011 0116 0B       		.uleb128 0xb
 2012 0117 3B       		.uleb128 0x3b
 2013 0118 05       		.uleb128 0x5
 2014 0119 49       		.uleb128 0x49
 2015 011a 13       		.uleb128 0x13
 2016 011b 3F       		.uleb128 0x3f
 2017 011c 19       		.uleb128 0x19
 2018 011d 3C       		.uleb128 0x3c
 2019 011e 19       		.uleb128 0x19
 2020 011f 00       		.byte	0
 2021 0120 00       		.byte	0
 2022 0121 13       		.uleb128 0x13
 2023 0122 34       		.uleb128 0x34
 2024 0123 00       		.byte	0
 2025 0124 03       		.uleb128 0x3
 2026 0125 0E       		.uleb128 0xe
 2027 0126 3A       		.uleb128 0x3a
 2028 0127 0B       		.uleb128 0xb
 2029 0128 3B       		.uleb128 0x3b
 2030 0129 0B       		.uleb128 0xb
 2031 012a 49       		.uleb128 0x49
 2032 012b 13       		.uleb128 0x13
 2033 012c 3F       		.uleb128 0x3f
 2034 012d 19       		.uleb128 0x19
 2035 012e 02       		.uleb128 0x2
 2036 012f 18       		.uleb128 0x18
 2037 0130 00       		.byte	0
 2038 0131 00       		.byte	0
 2039 0132 14       		.uleb128 0x14
 2040 0133 26       		.uleb128 0x26
 2041 0134 00       		.byte	0
 2042 0135 49       		.uleb128 0x49
 2043 0136 13       		.uleb128 0x13
 2044 0137 00       		.byte	0
 2045 0138 00       		.byte	0
 2046 0139 00       		.byte	0
 2047              		.section	.debug_aranges,"",%progbits
 2048 0000 6C000000 		.4byte	0x6c
 2049 0004 0200     		.2byte	0x2
 2050 0006 00000000 		.4byte	.Ldebug_info0
 2051 000a 04       		.byte	0x4
 2052 000b 00       		.byte	0
 2053 000c 0000     		.2byte	0
 2054 000e 0000     		.2byte	0
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 49


 2055 0010 00000000 		.4byte	.LFB63
 2056 0014 30000000 		.4byte	.LFE63-.LFB63
 2057 0018 00000000 		.4byte	.LFB64
 2058 001c 38020000 		.4byte	.LFE64-.LFB64
 2059 0020 00000000 		.4byte	.LFB65
 2060 0024 C8050000 		.4byte	.LFE65-.LFB65
 2061 0028 00000000 		.4byte	.LFB66
 2062 002c 0C000000 		.4byte	.LFE66-.LFB66
 2063 0030 00000000 		.4byte	.LFB67
 2064 0034 0C000000 		.4byte	.LFE67-.LFB67
 2065 0038 00000000 		.4byte	.LFB68
 2066 003c 0C000000 		.4byte	.LFE68-.LFB68
 2067 0040 00000000 		.4byte	.LFB69
 2068 0044 0C000000 		.4byte	.LFE69-.LFB69
 2069 0048 00000000 		.4byte	.LFB70
 2070 004c 0C000000 		.4byte	.LFE70-.LFB70
 2071 0050 00000000 		.4byte	.LFB71
 2072 0054 0C000000 		.4byte	.LFE71-.LFB71
 2073 0058 00000000 		.4byte	.LFB72
 2074 005c 0C000000 		.4byte	.LFE72-.LFB72
 2075 0060 00000000 		.4byte	.LFB73
 2076 0064 0C000000 		.4byte	.LFE73-.LFB73
 2077 0068 00000000 		.4byte	0
 2078 006c 00000000 		.4byte	0
 2079              		.section	.debug_ranges,"",%progbits
 2080              	.Ldebug_ranges0:
 2081 0000 00000000 		.4byte	.LFB63
 2082 0004 30000000 		.4byte	.LFE63
 2083 0008 00000000 		.4byte	.LFB64
 2084 000c 38020000 		.4byte	.LFE64
 2085 0010 00000000 		.4byte	.LFB65
 2086 0014 C8050000 		.4byte	.LFE65
 2087 0018 00000000 		.4byte	.LFB66
 2088 001c 0C000000 		.4byte	.LFE66
 2089 0020 00000000 		.4byte	.LFB67
 2090 0024 0C000000 		.4byte	.LFE67
 2091 0028 00000000 		.4byte	.LFB68
 2092 002c 0C000000 		.4byte	.LFE68
 2093 0030 00000000 		.4byte	.LFB69
 2094 0034 0C000000 		.4byte	.LFE69
 2095 0038 00000000 		.4byte	.LFB70
 2096 003c 0C000000 		.4byte	.LFE70
 2097 0040 00000000 		.4byte	.LFB71
 2098 0044 0C000000 		.4byte	.LFE71
 2099 0048 00000000 		.4byte	.LFB72
 2100 004c 0C000000 		.4byte	.LFE72
 2101 0050 00000000 		.4byte	.LFB73
 2102 0054 0C000000 		.4byte	.LFE73
 2103 0058 00000000 		.4byte	0
 2104 005c 00000000 		.4byte	0
 2105              		.section	.debug_line,"",%progbits
 2106              	.Ldebug_line0:
 2107 0000 C6020000 		.section	.debug_str,"MS",%progbits,1
 2107      02004701 
 2107      00000201 
 2107      FB0E0D00 
 2107      01010101 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 50


 2108              	.LASF37:
 2109 0000 696E7146 		.ascii	"inqFlagsOld\000"
 2109      6C616773 
 2109      4F6C6400 
 2110              	.LASF28:
 2111 000c 4D494449 		.ascii	"MIDI2_UART_RXISR_ExitCallback\000"
 2111      325F5541 
 2111      52545F52 
 2111      58495352 
 2111      5F457869 
 2112              	.LASF9:
 2113 002a 5F5F696E 		.ascii	"__int32_t\000"
 2113      7433325F 
 2113      7400
 2114              	.LASF27:
 2115 0034 4D494449 		.ascii	"MIDI2_UART_RXISR_EntryCallback\000"
 2115      325F5541 
 2115      52545F52 
 2115      58495352 
 2115      5F456E74 
 2116              	.LASF38:
 2117 0053 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2117      4320342E 
 2117      392E3320 
 2117      32303135 
 2117      30333033 
 2118 0086 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2118      20726576 
 2118      6973696F 
 2118      6E203232 
 2118      31323230 
 2119 00b9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2119      66756E63 
 2119      74696F6E 
 2119      2D736563 
 2119      74696F6E 
 2120              	.LASF40:
 2121 00e1 433A5C55 		.ascii	"C:\\Users\\214016586\\Documents\\GitHub\\Accoder\\A"
 2121      73657273 
 2121      5C323134 
 2121      30313635 
 2121      38365C44 
 2122 010e 63636F64 		.ascii	"ccoder_MIDI.cydsn\000"
 2122      65725F4D 
 2122      4944492E 
 2122      63796473 
 2122      6E00
 2123              	.LASF26:
 2124 0120 4D494449 		.ascii	"MIDI1_UART_RXISR_ExitCallback\000"
 2124      315F5541 
 2124      52545F52 
 2124      58495352 
 2124      5F457869 
 2125              	.LASF33:
 2126 013e 75736241 		.ascii	"usbActivityCounter\000"
 2126      63746976 
 2126      69747943 
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 51


 2126      6F756E74 
 2126      657200
 2127              	.LASF12:
 2128 0151 666C6F61 		.ascii	"float\000"
 2128      7400
 2129              	.LASF6:
 2130 0157 6C6F6E67 		.ascii	"long long int\000"
 2130      206C6F6E 
 2130      6720696E 
 2130      7400
 2131              	.LASF1:
 2132 0165 756E7369 		.ascii	"unsigned char\000"
 2132      676E6564 
 2132      20636861 
 2132      7200
 2133              	.LASF5:
 2134 0173 6C6F6E67 		.ascii	"long unsigned int\000"
 2134      20756E73 
 2134      69676E65 
 2134      6420696E 
 2134      7400
 2135              	.LASF3:
 2136 0185 73686F72 		.ascii	"short unsigned int\000"
 2136      7420756E 
 2136      7369676E 
 2136      65642069 
 2136      6E7400
 2137              	.LASF18:
 2138 0198 6361626C 		.ascii	"cable\000"
 2138      6500
 2139              	.LASF31:
 2140 019e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2140      52784275 
 2140      66666572 
 2140      00
 2141              	.LASF13:
 2142 01ab 646F7562 		.ascii	"double\000"
 2142      6C6500
 2143              	.LASF16:
 2144 01b2 6D61696E 		.ascii	"main\000"
 2144      00
 2145              	.LASF23:
 2146 01b7 5553425F 		.ascii	"USB_MIDI2_ProcessUsbOut_EntryCallback\000"
 2146      4D494449 
 2146      325F5072 
 2146      6F636573 
 2146      73557362 
 2147              	.LASF36:
 2148 01dd 63734275 		.ascii	"csButtChange\000"
 2148      74744368 
 2148      616E6765 
 2148      00
 2149              	.LASF20:
 2150 01ea 536C6565 		.ascii	"SleepIsr\000"
 2150      70497372 
 2150      00
 2151              	.LASF21:
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 52


 2152 01f3 5553425F 		.ascii	"USB_MIDI1_ProcessUsbOut_EntryCallback\000"
 2152      4D494449 
 2152      315F5072 
 2152      6F636573 
 2152      73557362 
 2153              	.LASF8:
 2154 0219 756E7369 		.ascii	"unsigned int\000"
 2154      676E6564 
 2154      20696E74 
 2154      00
 2155              	.LASF7:
 2156 0226 6C6F6E67 		.ascii	"long long unsigned int\000"
 2156      206C6F6E 
 2156      6720756E 
 2156      7369676E 
 2156      65642069 
 2157              	.LASF34:
 2158 023d 63734275 		.ascii	"csButtStates\000"
 2158      74745374 
 2158      61746573 
 2158      00
 2159              	.LASF24:
 2160 024a 5553425F 		.ascii	"USB_MIDI2_ProcessUsbOut_ExitCallback\000"
 2160      4D494449 
 2160      325F5072 
 2160      6F636573 
 2160      73557362 
 2161              	.LASF25:
 2162 026f 4D494449 		.ascii	"MIDI1_UART_RXISR_EntryCallback\000"
 2162      315F5541 
 2162      52545F52 
 2162      58495352 
 2162      5F456E74 
 2163              	.LASF10:
 2164 028e 696E7433 		.ascii	"int32_t\000"
 2164      325F7400 
 2165              	.LASF15:
 2166 0296 73697A65 		.ascii	"sizetype\000"
 2166      74797065 
 2166      00
 2167              	.LASF32:
 2168 029f 4D494449 		.ascii	"MIDI_IDENTITY_REPLY\000"
 2168      5F494445 
 2168      4E544954 
 2168      595F5245 
 2168      504C5900 
 2169              	.LASF29:
 2170 02b3 5553425F 		.ascii	"USB_MIDI1_InqFlags\000"
 2170      4D494449 
 2170      315F496E 
 2170      71466C61 
 2170      677300
 2171              	.LASF39:
 2172 02c6 6D61696E 		.ascii	"main.c\000"
 2172      2E6300
 2173              	.LASF14:
 2174 02cd 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\214016~1\AppData\Local\Temp\cc7k9tGr.s 			page 53


 2174      00
 2175              	.LASF17:
 2176 02d2 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 2176      63616C6C 
 2176      6261636B 
 2176      4C6F6361 
 2176      6C4D6964 
 2177              	.LASF19:
 2178 02ed 6D696469 		.ascii	"midiMsg\000"
 2178      4D736700 
 2179              	.LASF2:
 2180 02f5 73686F72 		.ascii	"short int\000"
 2180      7420696E 
 2180      7400
 2181              	.LASF11:
 2182 02ff 75696E74 		.ascii	"uint8\000"
 2182      3800
 2183              	.LASF4:
 2184 0305 6C6F6E67 		.ascii	"long int\000"
 2184      20696E74 
 2184      00
 2185              	.LASF0:
 2186 030e 7369676E 		.ascii	"signed char\000"
 2186      65642063 
 2186      68617200 
 2187              	.LASF22:
 2188 031a 5553425F 		.ascii	"USB_MIDI1_ProcessUsbOut_ExitCallback\000"
 2188      4D494449 
 2188      315F5072 
 2188      6F636573 
 2188      73557362 
 2189              	.LASF30:
 2190 033f 5553425F 		.ascii	"USB_MIDI2_InqFlags\000"
 2190      4D494449 
 2190      325F496E 
 2190      71466C61 
 2190      677300
 2191              	.LASF35:
 2192 0352 63734275 		.ascii	"csButtStatesOld\000"
 2192      74745374 
 2192      61746573 
 2192      4F6C6400 
 2193              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
